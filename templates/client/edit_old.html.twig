{% extends 'base.html.twig' %}

{% block title %}Modifier Client {{ client.code }}{% endblock %}

{% block stylesheets %}
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
    <style>
        .form-header {
            background: linear-gradient(135deg, #28a745 0%, #20c997 100%);
            color: white;
            padding: 2rem 0;
            margin-bottom: 2rem;
        }
        
        /* Amélioration des formulaires */
        .form-label {
            font-weight: 600;
            color: #495057;
            margin-bottom: 0.5rem;
            display: block;
        }
        
        .form-control, .form-select {
            border: 1px solid #dee2e6;
            border-radius: 0.375rem;
            padding: 0.75rem;
            transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;
            width: 100%;
            font-size: 1rem;
            line-height: 1.5;
        }
        
        .form-control:focus, .form-select:focus {
            border-color: #28a745;
            box-shadow: 0 0 0 0.2rem rgba(40, 167, 69, 0.25);
            outline: 0;
        }
        
        /* Espacement des champs de formulaire */
        .mb-3 {
            margin-bottom: 1rem !important;
        }
        
        /* Radio buttons pour type de personne */
        .form-check {
            margin-bottom: 0.5rem;
            padding-left: 1.5em;
        }
        
        .form-check-input {
            margin-top: 0.25rem;
            margin-left: -1.5em;
        }
        
        .form-check-label {
            margin-left: 0;
            font-weight: normal;
            cursor: pointer;
        }
        
        /* Cartes de sections */
        .card {
            border: 1px solid #dee2e6;
            border-radius: 0.5rem;
            box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075);
        }
        
        .card-header {
            background-color: #f8f9fa;
            border-bottom: 1px solid #dee2e6;
            padding: 0.75rem 1.25rem;
        }
        
        .card-header h6 {
            color: #495057;
            font-weight: 600;
            margin: 0;
        }
        
        .card-body {
            padding: 1.25rem;
        }
        
        /* Styles spécifiques pour les formulaires imbriqués */
        .card-body .form-label {
            font-weight: 500;
            color: #6c757d;
            font-size: 0.9rem;
        }
        
        .card-body .form-control,
        .card-body .form-select {
            font-size: 0.95rem;
            padding: 0.6rem 0.75rem;
        }
        
        /* Erreurs de formulaire */
        .invalid-feedback {
            display: block !important;
            color: #dc3545;
            font-size: 0.875rem;
            margin-top: 0.25rem;
        }
        
        .is-invalid {
            border-color: #dc3545;
        }
        
        /* Amélioration de la lisibilité des textes */
        .text-muted {
            color: #6c757d !important;
        }
        
        /* Styles pour les sections d'adresse et contact */
        .nested-form-section {
            background-color: #f8f9fa;
            border-radius: 0.375rem;
            padding: 1rem;
            margin-bottom: 0.5rem;
        }
        
        .nested-form-section .form-label {
            font-size: 0.85rem;
            text-transform: uppercase;
            letter-spacing: 0.5px;
            color: #495057;
            font-weight: 600;
        }
        
        /* Styles pour les switch buttons */
        .form-switch .form-check-input {
            width: 2em;
            height: 1em;
            background-color: #dee2e6;
            border: none;
            cursor: pointer;
        }
        
        .form-switch .form-check-input:checked {
            background-color: #28a745;
            border-color: #28a745;
        }
        
        .form-switch .form-check-input:focus {
            box-shadow: 0 0 0 0.2rem rgba(40, 167, 69, 0.25);
        }
        
        .form-switch .form-check-label {
            font-size: 0.875rem;
            color: #6c757d;
            margin-left: 0.5rem;
        }
        
        /* Animation pour l'accordéon */
        .collapse {
            transition: height 0.3s ease;
        }
        
        .collapsing {
            position: relative;
            height: 0;
            overflow: hidden;
            transition: height 0.3s ease;
        }
        
        /* Style pour les sections repliées */
        .card-body.collapsed {
            display: none;
        }
        
        /* Indicateur visuel pour les sections identiques */
        .card.identical {
            border-left: 4px solid #28a745;
        }
        
        .card.identical .card-header {
            background-color: #f8f9fa;
            border-bottom: 1px solid #28a745;
        }
    </style>
{% endblock %}

{% block body %}
<!-- Messages Flash -->
{% for type, messages in app.flashes %}
    {% for message in messages %}
        <div class="alert alert-{{ type == 'error' ? 'danger' : (type == 'warning' ? 'warning' : (type == 'info' ? 'info' : 'success')) }} alert-dismissible fade show" role="alert">
            {{ message }}
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    {% endfor %}
{% endfor %}

<!-- En-tête -->
<div class="form-header">
    <div class="container-fluid">
        <div class="row align-items-center">
            <div class="col-md-8">
                <h1 class="mb-1"><i class="fas fa-edit me-3"></i>Modifier {{ client.nomComplet }}</h1>
                <p class="mb-0">Code: {{ client.code }} • {{ client.isClient ? 'Client' : 'Prospect' }}</p>
            </div>
            <div class="col-md-4 text-end">
                <a href="{{ path('app_client_show', {'id': client.id}) }}" class="btn btn-light">
                    <i class="fas fa-eye"></i> Voir la fiche
                </a>
                <a href="{{ path('app_client_index') }}" class="btn btn-outline-light">
                    <i class="fas fa-arrow-left"></i> Retour à la liste
                </a>
            </div>
        </div>
    </div>
</div>

<div class="container-fluid">
    <div class="row">
        <div class="col-12">
            <div class="card">
                <div class="card-body">
                    {{ form_start(form) }}
                    {% include 'client/_form.html.twig' %}
                    {{ form_end(form) }}
                </div>
            </div>
        </div>
    </div>
</div>

<script>
document.addEventListener('DOMContentLoaded', function() {
    // Initialisation des états par défaut
    initializeDefaultStates();
    
    // Gestion des event listeners
    setupEventListeners();
});

function initializeDefaultStates() {
    // Vérifier si les sections de livraison sont vides pour les cocher par défaut
    const contactLivraisonEmpty = isContactLivraisonEmpty();
    const adresseLivraisonEmpty = isAdresseLivraisonEmpty();
    
    // Cocher les cases si les sections sont vides
    if (contactLivraisonEmpty) {
        document.getElementById('sameContactAsFacturation').checked = true;
        toggleContactLivraison();
    }
    
    if (adresseLivraisonEmpty) {
        document.getElementById('sameAddressAsFacturation').checked = true;
        toggleAdresseLivraison();
    }
}

function setupEventListeners() {
    // Observer les changements dans les champs de facturation pour mise à jour automatique
    const facturFields = [
        'form_contactFacturation_civilite',
        'form_contactFacturation_nom', 
        'form_contactFacturation_prenom',
        'form_contactFacturation_fonction',
        'form_contactFacturation_email',
        'form_contactFacturation_telephone',
        'form_contactFacturation_telephoneMobile',
        'form_contactFacturation_fax'
    ];
    
    facturFields.forEach(fieldId => {
        const field = document.getElementById(fieldId);
        if (field) {
            field.addEventListener('input', function() {
                if (document.getElementById('sameContactAsFacturation').checked) {
                    copyContactFacturationToLivraison();
                }
            });
        }
    });
    
    const adressFields = [
        'form_adresseFacturation_ligne1',
        'form_adresseFacturation_ligne2',
        'form_adresseFacturation_ligne3',
        'form_adresseFacturation_codePostal',
        'form_adresseFacturation_ville',
        'form_adresseFacturation_pays'
    ];
    
    adressFields.forEach(fieldId => {
        const field = document.getElementById(fieldId);
        if (field) {
            field.addEventListener('input', function() {
                if (document.getElementById('sameAddressAsFacturation').checked) {
                    copyAdresseFacturationToLivraison();
                }
            });
        }
    });
}

function toggleContactLivraison() {
    const checkbox = document.getElementById('sameContactAsFacturation');
    const section = document.getElementById('contactLivraisonSection');
    const card = section.closest('.card');
    
    if (checkbox.checked) {
        // Replier la section et copier les données
        section.style.display = 'none';
        card.classList.add('identical');
        copyContactFacturationToLivraison();
        
        // Désactiver les champs pour éviter qu'ils soient soumis
        disableContactLivraisonFields();
    } else {
        // Déplier la section
        section.style.display = 'block';
        card.classList.remove('identical');
        
        // Réactiver les champs
        enableContactLivraisonFields();
    }
}

function toggleAdresseLivraison() {
    const checkbox = document.getElementById('sameAddressAsFacturation');
    const section = document.getElementById('adresseLivraisonSection');
    const card = section.closest('.card');
    
    if (checkbox.checked) {
        // Replier la section et copier les données
        section.style.display = 'none';
        card.classList.add('identical');
        copyAdresseFacturationToLivraison();
        
        // Désactiver les champs pour éviter qu'ils soient soumis
        disableAdresseLivraisonFields();
    } else {
        // Déplier la section
        section.style.display = 'block';
        card.classList.remove('identical');
        
        // Réactiver les champs
        enableAdresseLivraisonFields();
    }
}

function copyContactFacturationToLivraison() {
    const mappings = [
        ['form_contactFacturation_civilite', 'form_contactLivraison_civilite'],
        ['form_contactFacturation_nom', 'form_contactLivraison_nom'],
        ['form_contactFacturation_prenom', 'form_contactLivraison_prenom'],
        ['form_contactFacturation_fonction', 'form_contactLivraison_fonction'],
        ['form_contactFacturation_email', 'form_contactLivraison_email'],
        ['form_contactFacturation_telephone', 'form_contactLivraison_telephone'],
        ['form_contactFacturation_telephoneMobile', 'form_contactLivraison_telephoneMobile'],
        ['form_contactFacturation_fax', 'form_contactLivraison_fax']
    ];
    
    mappings.forEach(([sourceId, targetId]) => {
        const source = document.getElementById(sourceId);
        const target = document.getElementById(targetId);
        if (source && target) {
            target.value = source.value;
        }
    });
}

function copyAdresseFacturationToLivraison() {
    const mappings = [
        ['form_adresseFacturation_ligne1', 'form_adresseLivraison_ligne1'],
        ['form_adresseFacturation_ligne2', 'form_adresseLivraison_ligne2'],
        ['form_adresseFacturation_ligne3', 'form_adresseLivraison_ligne3'],
        ['form_adresseFacturation_codePostal', 'form_adresseLivraison_codePostal'],
        ['form_adresseFacturation_ville', 'form_adresseLivraison_ville'],
        ['form_adresseFacturation_pays', 'form_adresseLivraison_pays']
    ];
    
    mappings.forEach(([sourceId, targetId]) => {
        const source = document.getElementById(sourceId);
        const target = document.getElementById(targetId);
        if (source && target) {
            target.value = source.value;
        }
    });
}

function isContactLivraisonEmpty() {
    const fields = [
        'form_contactLivraison_nom',
        'form_contactLivraison_prenom', 
        'form_contactLivraison_email',
        'form_contactLivraison_telephone',
        'form_contactLivraison_telephoneMobile'
    ];
    
    return fields.every(fieldId => {
        const field = document.getElementById(fieldId);
        return !field || !field.value || field.value.trim() === '';
    });
}

function isAdresseLivraisonEmpty() {
    const fields = [
        'form_adresseLivraison_ligne1',
        'form_adresseLivraison_ville',
        'form_adresseLivraison_codePostal'
    ];
    
    return fields.every(fieldId => {
        const field = document.getElementById(fieldId);
        return !field || !field.value || field.value.trim() === '';
    });
}

function disableContactLivraisonFields() {
    const fields = [
        'form_contactLivraison_civilite',
        'form_contactLivraison_nom',
        'form_contactLivraison_prenom',
        'form_contactLivraison_fonction',
        'form_contactLivraison_email',
        'form_contactLivraison_telephone',
        'form_contactLivraison_telephoneMobile',
        'form_contactLivraison_fax'
    ];
    
    fields.forEach(fieldId => {
        const field = document.getElementById(fieldId);
        if (field) {
            field.disabled = true;
            field.style.backgroundColor = '#f8f9fa';
        }
    });
}

function enableContactLivraisonFields() {
    const fields = [
        'form_contactLivraison_civilite',
        'form_contactLivraison_nom',
        'form_contactLivraison_prenom',
        'form_contactLivraison_fonction',
        'form_contactLivraison_email',
        'form_contactLivraison_telephone',
        'form_contactLivraison_telephoneMobile',
        'form_contactLivraison_fax'
    ];
    
    fields.forEach(fieldId => {
        const field = document.getElementById(fieldId);
        if (field) {
            field.disabled = false;
            field.style.backgroundColor = '';
        }
    });
}

function disableAdresseLivraisonFields() {
    const fields = [
        'form_adresseLivraison_ligne1',
        'form_adresseLivraison_ligne2',
        'form_adresseLivraison_ligne3',
        'form_adresseLivraison_codePostal',
        'form_adresseLivraison_ville',
        'form_adresseLivraison_pays'
    ];
    
    fields.forEach(fieldId => {
        const field = document.getElementById(fieldId);
        if (field) {
            field.disabled = true;
            field.style.backgroundColor = '#f8f9fa';
        }
    });
}

function enableAdresseLivraisonFields() {
    const fields = [
        'form_adresseLivraison_ligne1',
        'form_adresseLivraison_ligne2',
        'form_adresseLivraison_ligne3',
        'form_adresseLivraison_codePostal',
        'form_adresseLivraison_ville',
        'form_adresseLivraison_pays'
    ];
    
    fields.forEach(fieldId => {
        const field = document.getElementById(fieldId);
        if (field) {
            field.disabled = false;
            field.style.backgroundColor = '';
        }
    });
}
</script>
{% endblock %}