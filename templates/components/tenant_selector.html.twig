{# Composant sélecteur de société pour la barre de navigation #}
{% if current_societe and can_switch_societe %}
<div class="dropdown tenant-selector">
    <button class="btn btn-outline-light dropdown-toggle d-flex align-items-center" 
            type="button" 
            id="tenantSelectorDropdown" 
            data-bs-toggle="dropdown" 
            aria-expanded="false">
        <div class="d-flex align-items-center">
            {% if current_societe.logo %}
                <img src="{{ current_societe.logo }}" alt="Logo" class="rounded me-2" width="24" height="24">
            {% else %}
                <i class="fas {{ current_societe.type == 'mere' ? 'fa-building' : 'fa-store' }} me-2"></i>
            {% endif %}
            <div class="d-none d-md-block">
                <div class="tenant-name">{{ current_societe.displayName }}</div>
                {% if current_user_role %}
                    <small class="tenant-role opacity-75">{{ current_user_role.roleLibelle }}</small>
                {% endif %}
            </div>
            <div class="d-md-none">
                <span class="tenant-name-short">
                    {{ current_societe.nom|slice(0, 3)|upper }}
                </span>
            </div>
        </div>
    </button>
    
    <ul class="dropdown-menu dropdown-menu-end tenant-dropdown-menu" aria-labelledby="tenantSelectorDropdown">
        <li>
            <div class="dropdown-header d-flex align-items-center justify-content-between">
                <span>Changer de société</span>
                {% if is_super_admin %}
                    <span class="badge bg-warning text-dark">
                        <i class="fas fa-crown"></i> Admin
                    </span>
                {% endif %}
            </div>
        </li>
        <li><hr class="dropdown-divider"></li>
        
        {% for societe in available_societes %}
            {% set is_current = current_societe and societe.id == current_societe.id %}
            <li>
                <a class="dropdown-item tenant-option {{ is_current ? 'active' : '' }}" 
                   href="#" 
                   data-societe-id="{{ societe.id }}"
                   {{ is_current ? 'onclick="return false;"' : '' }}>
                    <div class="d-flex align-items-center">
                        <div class="tenant-option-icon me-3">
                            {% if societe.logo %}
                                <img src="{{ societe.logo }}" alt="Logo" class="rounded" width="32" height="32">
                            {% else %}
                                <div class="icon-placeholder rounded d-flex align-items-center justify-content-center">
                                    <i class="fas {{ societe.type == 'mere' ? 'fa-building' : 'fa-store' }}"></i>
                                </div>
                            {% endif %}
                        </div>
                        <div class="flex-grow-1">
                            <div class="tenant-option-name">
                                {{ societe.nom }}
                                {% if is_current %}
                                    <i class="fas fa-check text-success ms-1"></i>
                                {% endif %}
                            </div>
                            <small class="text-muted">
                                {{ societe.type == 'mere' ? 'Société Mère' : 'Filiale' }}
                                {% if societe.type == 'fille' and societe.societeParent %}
                                    de {{ societe.societeParent.nom }}
                                {% endif %}
                            </small>
                        </div>
                        {% if not is_current %}
                            <div class="tenant-switch-indicator">
                                <i class="fas fa-arrow-right text-muted"></i>
                            </div>
                        {% endif %}
                    </div>
                </a>
            </li>
        {% endfor %}
        
        <li><hr class="dropdown-divider"></li>
        <li>
            <button class="dropdown-item text-muted" onclick="refreshTenantCache()">
                <i class="fas fa-refresh me-2"></i>
                Actualiser
            </button>
        </li>
    </ul>
</div>

<style>
.tenant-selector .dropdown-toggle {
    border: 1px solid rgba(255, 255, 255, 0.2);
    background: rgba(255, 255, 255, 0.1);
    min-width: 160px;
    text-align: left;
}

.tenant-selector .dropdown-toggle:hover {
    background: rgba(255, 255, 255, 0.2);
    border-color: rgba(255, 255, 255, 0.3);
}

.tenant-name {
    font-weight: 600;
    font-size: 0.9rem;
    line-height: 1.2;
    max-width: 150px;
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
}

.tenant-role {
    font-size: 0.75rem;
    line-height: 1;
}

.tenant-name-short {
    font-weight: 600;
    font-size: 0.8rem;
    letter-spacing: 0.5px;
}

.tenant-dropdown-menu {
    min-width: 280px;
    max-height: 400px;
    overflow-y: auto;
    box-shadow: 0 10px 25px rgba(0, 0, 0, 0.15);
    border: none;
    border-radius: 8px;
}

.tenant-option {
    padding: 12px 16px;
    transition: all 0.2s ease;
}

.tenant-option:hover:not(.active) {
    background: rgba(var(--bs-primary-rgb), 0.1);
}

.tenant-option.active {
    background: rgba(var(--bs-success-rgb), 0.1);
    color: var(--bs-success);
    pointer-events: none;
}

.tenant-option-icon .icon-placeholder {
    width: 32px;
    height: 32px;
    background: rgba(var(--bs-primary-rgb), 0.1);
    border: 2px solid rgba(var(--bs-primary-rgb), 0.2);
}

.tenant-option-name {
    font-weight: 500;
    font-size: 0.9rem;
    line-height: 1.3;
}

.tenant-switch-indicator {
    opacity: 0;
    transition: opacity 0.2s ease;
}

.tenant-option:hover .tenant-switch-indicator {
    opacity: 1;
}

.tenant-loading {
    pointer-events: none;
    opacity: 0.6;
}
</style>

<script>
// Gestion du switch de société
document.addEventListener('DOMContentLoaded', function() {
    const tenantOptions = document.querySelectorAll('.tenant-option[data-societe-id]');
    
    tenantOptions.forEach(option => {
        option.addEventListener('click', function(e) {
            e.preventDefault();
            
            const societeId = this.dataset.societeId;
            if (!societeId) return;
            
            // Ajouter classe de chargement
            this.classList.add('tenant-loading');
            const originalContent = this.innerHTML;
            this.innerHTML = '<div class="d-flex align-items-center"><i class="fas fa-spinner fa-spin me-2"></i>Chargement...</div>';
            
            // Effectuer le switch
            fetch(`/tenant/switch/${societeId}`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    // Recharger la page pour appliquer le nouveau contexte
                    window.location.reload();
                } else {
                    // Restaurer le contenu original et afficher l'erreur
                    this.innerHTML = originalContent;
                    this.classList.remove('tenant-loading');
                    
                    // Afficher une notification d'erreur
                    showTenantNotification('error', data.message || 'Impossible de changer de société');
                }
            })
            .catch(error => {
                console.error('Erreur lors du switch:', error);
                this.innerHTML = originalContent;
                this.classList.remove('tenant-loading');
                showTenantNotification('error', 'Une erreur est survenue');
            });
        });
    });
});

// Fonction pour rafraîchir le cache des sociétés
function refreshTenantCache() {
    fetch('/tenant/refresh', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json',
            'X-Requested-With': 'XMLHttpRequest'
        },
    })
    .then(response => response.json())
    .then(data => {
        if (data.success) {
            showTenantNotification('success', 'Cache actualisé');
            // Recharger après un court délai
            setTimeout(() => window.location.reload(), 1000);
        } else {
            showTenantNotification('error', 'Erreur lors de l\'actualisation');
        }
    })
    .catch(error => {
        console.error('Erreur:', error);
        showTenantNotification('error', 'Erreur lors de l\'actualisation');
    });
}

// Fonction pour afficher des notifications tenant
function showTenantNotification(type, message) {
    // Utiliser toastr si disponible, sinon alert
    if (typeof toastr !== 'undefined') {
        toastr[type](message);
    } else {
        alert(message);
    }
}
</script>

{% elseif current_societe and not can_switch_societe %}
{# Affichage simple si une seule société #}
<div class="current-tenant d-flex align-items-center text-light">
    {% if current_societe.logo %}
        <img src="{{ current_societe.logo }}" alt="Logo" class="rounded me-2" width="24" height="24">
    {% else %}
        <i class="fas {{ current_societe.type == 'mere' ? 'fa-building' : 'fa-store' }} me-2"></i>
    {% endif %}
    <div class="d-none d-md-block">
        <div class="tenant-name">{{ current_societe.displayName }}</div>
        {% if current_user_role %}
            <small class="tenant-role opacity-75">{{ current_user_role.roleLibelle }}</small>
        {% endif %}
    </div>
    <div class="d-md-none">
        <span class="tenant-name-short">{{ current_societe.nom|slice(0, 3)|upper }}</span>
    </div>
</div>

{% endif %}