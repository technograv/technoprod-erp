{% extends 'base.html.twig' %}

{% block title %}Nouveau Prospect{% endblock %}

{% block stylesheets %}
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
    <style>
        .page-header {
            background: linear-gradient(135deg, #17a2b8 0%, #138496 100%);
            color: white;
            padding: 2rem 0;
            margin-bottom: 0;
        }
        .form-tabs {
            background-color: #f8f9fa;
            border-bottom: 1px solid #dee2e6;
            margin-bottom: 0;
        }
        .nav-tabs .nav-link {
            border: none;
            border-bottom: 3px solid transparent;
            background: none;
            color: #6c757d;
            padding: 1rem 1.5rem;
        }
        .nav-tabs .nav-link:hover {
            border-bottom-color: #dee2e6;
            color: #495057;
        }
        .nav-tabs .nav-link.active {
            background: white;
            color: #495057;
            border-bottom-color: #17a2b8;
            font-weight: 600;
        }
        .tab-content {
            background: white;
            min-height: 500px;
        }
        .form-section {
            background: #f8f9fa;
            border-radius: 8px;
            padding: 1.5rem;
            margin-bottom: 1.5rem;
        }
        .form-section h6 {
            color: #495057;
            font-weight: 600;
            margin-bottom: 1rem;
            border-bottom: 2px solid #dee2e6;
            padding-bottom: 0.5rem;
        }
        .identique-checkbox {
            background: #e7f3ff;
            border: 1px solid #b3d9ff;
            border-radius: 4px;
            padding: 0.75rem;
            margin-bottom: 1rem;
        }
        .type-personne-radio {
            margin-bottom: 1rem;
        }
        .type-personne-radio .form-check {
            background: white;
            border: 2px solid #dee2e6;
            border-radius: 8px;
            padding: 1rem;
            margin-bottom: 0.5rem;
        }
        .type-personne-radio .form-check-input:checked + .form-check-label {
            color: #17a2b8;
            font-weight: 600;
        }
        .conditional-field {
            transition: all 0.3s ease;
        }
        .actions-bar {
            background: #fff;
            border-top: 1px solid #dee2e6;
            padding: 1rem;
            position: sticky;
            bottom: 0;
            z-index: 1000;
        }
        .field-error {
            border: 2px solid #dc3545 !important;
            background-color: #fff5f5 !important;
            animation: shake 0.5s ease-in-out;
        }
        .field-error-message {
            color: #dc3545;
            font-size: 0.875rem;
            margin-top: 0.25rem;
            display: block;
        }
        .error-summary {
            background: #f8d7da;
            border: 1px solid #f5c6cb;
            color: #721c24;
            padding: 1rem;
            border-radius: 0.375rem;
            margin-bottom: 1rem;
        }
        @keyframes shake {
            0%, 20%, 40%, 60%, 80% { transform: translateX(0); }
            10%, 30%, 50%, 70%, 90% { transform: translateX(-3px); }
        }
    </style>
{% endblock %}

{% block body %}
<!-- En-tête -->
<div class="page-header">
    <div class="container-fluid">
        <div class="row align-items-center">
            <div class="col-md-8">
                <h1 class="mb-1"><i class="fas fa-user-plus me-3"></i>Nouveau Prospect</h1>
                <p class="mb-0">Créer un nouveau prospect selon le modèle EBP</p>
            </div>
            <div class="col-md-4 text-end">
                <a href="{{ path('app_prospect_index') }}" class="btn btn-light">
                    <i class="fas fa-arrow-left"></i> Retour à la liste
                </a>
            </div>
        </div>
    </div>
</div>

{{ form_start(form, {'attr': {'novalidate': 'novalidate', 'id': 'prospectForm'}}) }}

<!-- Onglets -->
<div class="form-tabs">
    <div class="container-fluid">
        <ul class="nav nav-tabs" id="formTabs" role="tablist">
            <li class="nav-item" role="presentation">
                <button class="nav-link active" id="principal-tab" data-bs-toggle="tab" data-bs-target="#principal" type="button" role="tab">
                    <i class="fas fa-user me-2"></i>Principal
                </button>
            </li>
            <li class="nav-item" role="presentation">
                <button class="nav-link" id="facturation-tab" data-bs-toggle="tab" data-bs-target="#facturation" type="button" role="tab">
                    <i class="fas fa-file-invoice me-2"></i>Facturation
                </button>
            </li>
            <li class="nav-item" role="presentation">
                <button class="nav-link" id="livraison-tab" data-bs-toggle="tab" data-bs-target="#livraison" type="button" role="tab">
                    <i class="fas fa-truck me-2"></i>Livraison
                </button>
            </li>
            <li class="nav-item" role="presentation">
                <button class="nav-link" id="gestion-tab" data-bs-toggle="tab" data-bs-target="#gestion" type="button" role="tab">
                    <i class="fas fa-cogs me-2"></i>Gestion
                </button>
            </li>
            <li class="nav-item" role="presentation">
                <button class="nav-link" id="notes-tab" data-bs-toggle="tab" data-bs-target="#notes" type="button" role="tab">
                    <i class="fas fa-sticky-note me-2"></i>Notes
                </button>
            </li>
        </ul>
    </div>
</div>

<!-- Contenu des onglets -->
<div class="container-fluid">
    <div class="tab-content" id="formTabsContent">
        <!-- Onglet Principal -->
        <div class="tab-pane fade show active" id="principal" role="tabpanel">
            <div class="p-4">
                <div class="row">
                    <!-- Identification -->
                    <div class="col-md-6">
                        <div class="form-section">
                            <h6><i class="fas fa-id-card me-2"></i>Identification</h6>
                            {{ form_row(form.famille) }}
                            
                            <div class="type-personne-radio">
                                {{ form_row(form.typePersonne) }}
                                <small class="text-muted" id="type-personne-hint" style="display: none;">
                                    <i class="fas fa-info-circle"></i> Type sélectionné automatiquement selon la famille
                                </small>
                            </div>

                            {{ form_row(form.nom) }}
                            
                            <div id="personne-morale-fields" class="conditional-field">
                                {{ form_row(form.formeJuridique) }}
                            </div>
                        </div>
                    </div>

                    <!-- Contact principal -->
                    <div class="col-md-6">
                        <div class="form-section">
                            <h6><i class="fas fa-user me-2"></i>Contact principal</h6>
                            <div class="row">
                                <div class="col-4">
                                    {{ form_widget(form.contactFacturation.civilite) }}
                                </div>
                                <div class="col-4">
                                    {{ form_widget(form.contactFacturation.nom) }}
                                </div>
                                <div class="col-4">
                                    {{ form_widget(form.contactFacturation.prenom) }}
                                </div>
                            </div>
                            {{ form_widget(form.contactFacturation.fonction) }}
                            <div class="row">
                                <div class="col-6">
                                    {{ form_widget(form.contactFacturation.telephone) }}
                                </div>
                                <div class="col-6">
                                    {{ form_widget(form.contactFacturation.email) }}
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="row">
                    <!-- Adresse principale -->
                    <div class="col-md-6">
                        <div class="form-section">
                            <h6><i class="fas fa-map-marker-alt me-2"></i>Adresse principale</h6>
                            {{ form_widget(form.adresseFacturation.ligne1) }}
                            {{ form_widget(form.adresseFacturation.ligne2) }}
                            {{ form_widget(form.adresseFacturation.ligne3) }}
                            <div class="row">
                                <div class="col-4">
                                    {{ form_widget(form.adresseFacturation.codePostal) }}
                                </div>
                                <div class="col-8">
                                    {{ form_widget(form.adresseFacturation.ville) }}
                                </div>
                            </div>
                            {{ form_widget(form.adresseFacturation.pays) }}
                        </div>
                    </div>

                    <!-- Informations complémentaires -->
                    <div class="col-md-6">
                        <div class="form-section">
                            <h6><i class="fas fa-info-circle me-2"></i>Informations</h6>
                            <div class="alert alert-success">
                                <i class="fas fa-check-circle me-2"></i>
                                <strong>Prospect prêt à créer !</strong><br>
                                Les paramètres comptables seront renseignés dans l'onglet <strong>Gestion</strong> lors de la conversion en client.
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Onglet Facturation -->
        <div class="tab-pane fade" id="facturation" role="tabpanel">
            <div class="p-4">
                <div class="alert alert-info">
                    <i class="fas fa-info-circle me-2"></i>
                    Les informations principales de facturation sont renseignées dans l'onglet <strong>Principal</strong>.
                    Utilisez cet onglet pour des informations complémentaires.
                </div>
                <div class="row">
                    <div class="col-md-6">
                        <div class="form-section">
                            <h6><i class="fas fa-phone me-2"></i>Contact complémentaire</h6>
                            {{ form_widget(form.contactFacturation.telephoneMobile) }}
                            {{ form_widget(form.contactFacturation.fax) }}
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-section">
                            <h6><i class="fas fa-info-circle me-2"></i>Informations</h6>
                            <p class="text-muted">Informations complémentaires de facturation.</p>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Onglet Livraison -->
        <div class="tab-pane fade" id="livraison" role="tabpanel">
            <div class="p-4">
                <div class="row">
                    <div class="col-md-6">
                        <div class="form-section">
                            <h6><i class="fas fa-truck me-2"></i>Adresse de livraison</h6>
                            <div class="identique-checkbox">
                                {{ form_widget(form.adresseLivraison.identiqueFacturation) }}
                            </div>
                            <div id="adresse-livraison-fields">
                                {{ form_widget(form.adresseLivraison.ligne1) }}
                                {{ form_widget(form.adresseLivraison.ligne2) }}
                                {{ form_widget(form.adresseLivraison.ligne3) }}
                                <div class="row">
                                    <div class="col-4">
                                        {{ form_widget(form.adresseLivraison.codePostal) }}
                                    </div>
                                    <div class="col-8">
                                        {{ form_widget(form.adresseLivraison.ville) }}
                                    </div>
                                </div>
                                {{ form_widget(form.adresseLivraison.pays) }}
                            </div>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-section">
                            <h6><i class="fas fa-user me-2"></i>Contact de livraison</h6>
                            <div class="identique-checkbox">
                                {{ form_widget(form.contactLivraison.identiqueFacturation) }}
                            </div>
                            <div id="contact-livraison-fields">
                                <div class="row">
                                    <div class="col-4">
                                        {{ form_widget(form.contactLivraison.civilite) }}
                                    </div>
                                    <div class="col-4">
                                        {{ form_widget(form.contactLivraison.nom) }}
                                    </div>
                                    <div class="col-4">
                                        {{ form_widget(form.contactLivraison.prenom) }}
                                    </div>
                                </div>
                                {{ form_widget(form.contactLivraison.fonction) }}
                                <div class="row">
                                    <div class="col-6">
                                        {{ form_widget(form.contactLivraison.telephone) }}
                                    </div>
                                    <div class="col-6">
                                        {{ form_widget(form.contactLivraison.telephoneMobile) }}
                                    </div>
                                </div>
                                {{ form_widget(form.contactLivraison.email) }}
                                {{ form_widget(form.contactLivraison.fax) }}
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Onglet Gestion -->
        <div class="tab-pane fade" id="gestion" role="tabpanel">
            <div class="p-4">
                <div class="row">
                    <div class="col-md-6">
                        <div class="form-section">
                            <h6><i class="fas fa-credit-card me-2"></i>Conditions de paiement</h6>
                            {{ form_row(form.modePaiement) }}
                            <div class="row">
                                <div class="col-6">
                                    {{ form_row(form.delaiPaiement) }}
                                </div>
                                <div class="col-6">
                                    {{ form_row(form.conditionsTarifs) }}
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-section">
                            <h6><i class="fas fa-calculator me-2"></i>Paramètres comptables</h6>
                            <div class="row">
                                <div class="col-6">
                                    {{ form_row(form.regimeComptable) }}
                                </div>
                                <div class="col-6">
                                    {{ form_row(form.assujettiTva) }}
                                </div>
                            </div>
                            {{ form_row(form.tauxTva) }}
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Onglet Notes -->
        <div class="tab-pane fade" id="notes" role="tabpanel">
            <div class="p-4">
                <div class="form-section">
                    <h6><i class="fas fa-sticky-note me-2"></i>Notes et remarques</h6>
                    {{ form_row(form.notes) }}
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Barre d'actions -->
<div class="actions-bar">
    <div class="container-fluid">
        <div class="d-flex justify-content-between align-items-center">
            <div>
                <a href="{{ path('app_prospect_index') }}" class="btn btn-secondary">
                    <i class="fas fa-times"></i> Annuler
                </a>
            </div>
            <div>
                <button type="submit" class="btn btn-primary btn-lg">
                    <i class="fas fa-save"></i> Créer le prospect
                </button>
            </div>
        </div>
    </div>
</div>

{{ form_end(form) }}

{% block javascripts %}
<script>
document.addEventListener('DOMContentLoaded', function() {
    // Gestion du type de personne
    const typePersonneRadios = document.querySelectorAll('input[name="prospect[typePersonne]"]');
    const personneMoraleFields = document.getElementById('personne-morale-fields');
    
    function togglePersonneFields() {
        const selectedType = document.querySelector('input[name="prospect[typePersonne]"]:checked')?.value;
        
        if (selectedType === 'physique') {
            personneMoraleFields.style.display = 'none';
        } else {
            personneMoraleFields.style.display = 'block';
        }
    }
    
    typePersonneRadios.forEach(radio => {
        radio.addEventListener('change', togglePersonneFields);
    });
    
    togglePersonneFields(); // Initial state
    
    // Gestion "identique facturation" pour adresse livraison
    const identiqueAdresseCheckbox = document.querySelector('input[name="prospect[adresseLivraison][identiqueFacturation]"]');
    const adresseLivraisonFields = document.getElementById('adresse-livraison-fields');
    
    if (identiqueAdresseCheckbox) {
        identiqueAdresseCheckbox.addEventListener('change', function() {
            if (this.checked) {
                adresseLivraisonFields.style.display = 'none';
                // Copier les valeurs de facturation
                copyFacturationToLivraison();
            } else {
                adresseLivraisonFields.style.display = 'block';
            }
        });
    }
    
    // Gestion "identique facturation" pour contact livraison
    const identiqueContactCheckbox = document.querySelector('input[name="prospect[contactLivraison][identiqueFacturation]"]');
    const contactLivraisonFields = document.getElementById('contact-livraison-fields');
    
    if (identiqueContactCheckbox) {
        identiqueContactCheckbox.addEventListener('change', function() {
            if (this.checked) {
                contactLivraisonFields.style.display = 'none';
                // Copier les valeurs de facturation
                copyContactFacturationToLivraison();
            } else {
                contactLivraisonFields.style.display = 'block';
            }
        });
    }
    
    function copyFacturationToLivraison() {
        // Copier les champs d'adresse
        const facturationFields = ['ligne1', 'ligne2', 'ligne3', 'codePostal', 'ville', 'pays'];
        facturationFields.forEach(field => {
            const facturationInput = document.querySelector(`input[name="prospect[adresseFacturation][${field}]"]`);
            const livraisonInput = document.querySelector(`input[name="prospect[adresseLivraison][${field}]"]`);
            if (facturationInput && livraisonInput) {
                livraisonInput.value = facturationInput.value;
            }
        });
    }
    
    function copyContactFacturationToLivraison() {
        // Copier les champs de contact
        const contactFields = ['civilite', 'nom', 'prenom', 'fonction', 'telephone', 'telephoneMobile', 'email', 'fax'];
        contactFields.forEach(field => {
            const facturationInput = document.querySelector(`[name="prospect[contactFacturation][${field}]"]`);
            const livraisonInput = document.querySelector(`[name="prospect[contactLivraison][${field}]"]`);
            if (facturationInput && livraisonInput) {
                livraisonInput.value = facturationInput.value;
            }
        });
    }
    
    // Validation avant soumission
    document.getElementById('prospectForm').addEventListener('submit', function(e) {
        // Nettoyer les erreurs précédentes
        const errorSummary = document.getElementById('error-summary');
        if (errorSummary) {
            errorSummary.remove();
        }
        document.querySelectorAll('.field-error').forEach(field => {
            field.classList.remove('field-error');
        });
        document.querySelectorAll('.field-error-message').forEach(msg => {
            msg.remove();
        });
        
        // Définir les champs obligatoires avec leurs labels
        const requiredFields = [
            { selector: 'select[name="prospect[famille]"]', label: 'Famille' },
            { selector: 'input[name="prospect[nom]"]', label: 'Nom / Raison sociale' },
            { selector: 'input[name="prospect[contactFacturation][nom]"]', label: 'Nom du contact' },
            { selector: 'input[name="prospect[contactFacturation][email]"]', label: 'Email du contact' },
            { selector: 'input[name="prospect[adresseFacturation][ligne1]"]', label: 'Adresse ligne 1' },
            { selector: 'input[name="prospect[adresseFacturation][codePostal]"]', label: 'Code postal' },
            { selector: 'input[name="prospect[adresseFacturation][ville]"]', label: 'Ville' }
        ];
        
        let errors = [];
        let hasErrors = false;
        
        requiredFields.forEach(fieldInfo => {
            const field = document.querySelector(fieldInfo.selector);
            if (field && !field.value.trim()) {
                field.classList.add('field-error');
                
                // Ajouter message d'erreur sous le champ
                const errorMsg = document.createElement('small');
                errorMsg.className = 'field-error-message';
                errorMsg.textContent = `${fieldInfo.label} est obligatoire`;
                field.parentNode.appendChild(errorMsg);
                
                errors.push(fieldInfo.label);
                hasErrors = true;
            }
        });
        
        if (hasErrors) {
            e.preventDefault();
            
            // Créer un résumé des erreurs en haut du formulaire
            const summary = document.createElement('div');
            summary.id = 'error-summary';
            summary.className = 'error-summary';
            summary.innerHTML = `
                <h6><i class="fas fa-exclamation-triangle me-2"></i>Veuillez corriger les erreurs suivantes :</h6>
                <ul class="mb-0">
                    ${errors.map(error => `<li>${error}</li>`).join('')}
                </ul>
            `;
            
            // Insérer le résumé au début du contenu du premier onglet
            const firstTabContent = document.querySelector('.tab-pane.active .p-4');
            if (firstTabContent) {
                firstTabContent.insertBefore(summary, firstTabContent.firstChild);
            }
            
            // Faire défiler vers le premier champ en erreur
            const firstErrorField = document.querySelector('.field-error');
            if (firstErrorField) {
                firstErrorField.scrollIntoView({ behavior: 'smooth', block: 'center' });
                firstErrorField.focus();
            }
        }
    });
    
    // Validation en temps réel - retirer les erreurs quand l'utilisateur corrige
    document.addEventListener('input', function(e) {
        if (e.target.classList.contains('field-error')) {
            if (e.target.value.trim()) {
                e.target.classList.remove('field-error');
                // Supprimer le message d'erreur associé
                const errorMsg = e.target.parentNode.querySelector('.field-error-message');
                if (errorMsg) {
                    errorMsg.remove();
                }
                
                // Si plus d'erreurs, supprimer le résumé
                if (document.querySelectorAll('.field-error').length === 0) {
                    const errorSummary = document.getElementById('error-summary');
                    if (errorSummary) {
                        errorSummary.remove();
                    }
                }
            }
        }
    });
    
    // Validation en temps réel pour les selects
    document.addEventListener('change', function(e) {
        if (e.target.classList.contains('field-error')) {
            if (e.target.value.trim()) {
                e.target.classList.remove('field-error');
                // Supprimer le message d'erreur associé
                const errorMsg = e.target.parentNode.querySelector('.field-error-message');
                if (errorMsg) {
                    errorMsg.remove();
                }
                
                // Si plus d'erreurs, supprimer le résumé
                if (document.querySelectorAll('.field-error').length === 0) {
                    const errorSummary = document.getElementById('error-summary');
                    if (errorSummary) {
                        errorSummary.remove();
                    }
                }
            }
        }
    });
    
    // Gestion automatique du type de personne selon la famille
    const familleSelect = document.querySelector('select[name="prospect[famille]"]');
    
    // Mapping famille -> type de personne par défaut
    const familleTypeMapping = {
        'TPE': 'morale',
        'PME': 'morale', 
        'ETI': 'morale',
        'Grand Compte': 'morale',
        'Administration': 'morale',
        'Association': 'morale',
        'Particulier': 'physique'
    };
    
    if (familleSelect) {
        familleSelect.addEventListener('change', function() {
            const selectedFamille = this.value;
            const defaultType = familleTypeMapping[selectedFamille];
            
            if (defaultType) {
                // Sélectionner automatiquement le type de personne correspondant
                const targetRadio = document.querySelector(`input[name="prospect[typePersonne]"][value="${defaultType}"]`);
                if (targetRadio) {
                    targetRadio.checked = true;
                    // Déclencher l'événement change pour mettre à jour l'affichage
                    togglePersonneFields();
                    
                    // Afficher l'indication que la sélection est automatique
                    const hint = document.getElementById('type-personne-hint');
                    if (hint) {
                        hint.style.display = 'block';
                        // Cacher l'indication après 3 secondes
                        setTimeout(() => {
                            hint.style.display = 'none';
                        }, 3000);
                    }
                }
            }
        });
    }
    
    // Initialiser le formatage des numéros de téléphone
    initPhoneFormatting();
    
    // Fonction pour formater automatiquement les numéros de téléphone
    function initPhoneFormatting() {
        const phoneInputs = document.querySelectorAll('.phone-input, .mobile-input');
        
        phoneInputs.forEach(input => {
            input.addEventListener('input', function(e) {
                formatPhoneNumber(e.target);
            });
            
            input.addEventListener('blur', function(e) {
                validatePhoneNumber(e.target);
            });
        });
    }
    
    function formatPhoneNumber(input) {
        let value = input.value.replace(/[^\d+]/g, '');
        
        if (value.startsWith('+33') || value.startsWith('0033')) {
            if (value.startsWith('+33')) {
                value = value.substring(3);
            } else if (value.startsWith('0033')) {
                value = value.substring(4);
            }
            
            if (value.length > 0) {
                value = '+33 ' + value.charAt(0) + (value.length > 1 ? ' ' + value.substring(1).match(/.{1,2}/g)?.join(' ') || value.substring(1) : '');
            } else {
                value = '+33';
            }
        } else {
            if (value.startsWith('0')) {
                value = value.substring(0, 10);
                value = value.replace(/(\d{2})(?=\d)/g, '$1 ');
            }
        }
        
        input.value = value.trim();
    }
    
    function validatePhoneNumber(input) {
        const value = input.value.trim();
        if (value && !input.checkValidity()) {
            input.classList.add('is-invalid');
            
            let helpText = input.parentNode.querySelector('.phone-help');
            if (!helpText) {
                helpText = document.createElement('small');
                helpText.className = 'phone-help text-danger';
                input.parentNode.appendChild(helpText);
            }
            
            if (input.classList.contains('mobile-input')) {
                helpText.textContent = 'Format attendu: 06 12 34 56 78 ou +33 6 12 34 56 78';
            } else {
                helpText.textContent = 'Format attendu: 05 61 23 45 67 ou +33 5 61 23 45 67';
            }
        } else {
            input.classList.remove('is-invalid');
            const helpText = input.parentNode.querySelector('.phone-help');
            if (helpText) {
                helpText.remove();
            }
        }
    }
});
</script>
{% endblock %}
{% endblock %}