{% extends 'base.html.twig' %}

{% block title %}Administration - TechnoProd{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    <style>
        .admin-header {
            background: linear-gradient(135deg, #dc3545 0%, #e83e53 100%);
            color: white;
            padding: 2rem 0;
            margin-bottom: 2rem;
            box-shadow: 0 4px 12px rgba(220, 53, 69, 0.3);
        }
        
        .admin-nav {
            background: white;
            border-radius: 12px;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
            margin-bottom: 2rem;
            overflow: hidden;
        }
        
        .admin-nav .nav-link {
            border: none;
            border-radius: 0;
            color: #495057;
            font-weight: 600;
            padding: 1rem 1.5rem;
            transition: all 0.3s ease;
            border-bottom: 3px solid transparent;
        }
        
        .admin-nav .nav-link:hover,
        .admin-nav .nav-link.active {
            background: linear-gradient(135deg, #dc3545 0%, #e83e53 100%);
            color: white;
            border-bottom-color: #c82333;
        }
        
        .stats-card {
            background: white;
            border-radius: 12px;
            padding: 2rem;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
            border-left: 4px solid #dc3545;
            transition: transform 0.3s ease;
        }
        
        .stats-card:hover {
            transform: translateY(-2px);
            box-shadow: 0 8px 16px rgba(0, 0, 0, 0.15);
        }
        
        .stats-number {
            font-size: 3rem;
            font-weight: 700;
            color: #dc3545;
            line-height: 1;
            margin-bottom: 0.5rem;
        }
        
        .stats-label {
            color: #6c757d;
            font-weight: 600;
            text-transform: uppercase;
            font-size: 0.875rem;
            letter-spacing: 0.5px;
        }
        
        .admin-section {
            background: white;
            border-radius: 12px;
            padding: 2rem;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
            margin-bottom: 2rem;
        }
        
        .section-title {
            color: #495057;
            font-weight: 700;
            font-size: 1.5rem;
            margin-bottom: 1.5rem;
            padding-bottom: 1rem;
            border-bottom: 2px solid #dc3545;
        }
        
        .quick-action-btn {
            background: linear-gradient(135deg, #dc3545 0%, #e83e53 100%);
            border: none;
            border-radius: 8px;
            padding: 1rem 1.5rem;
            color: white;
            font-weight: 600;
            transition: all 0.3s ease;
            text-decoration: none;
            display: inline-block;
            margin-right: 1rem;
            margin-bottom: 1rem;
        }
        
        .quick-action-btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 6px 12px rgba(220, 53, 69, 0.4);
            color: white;
            text-decoration: none;
        }
        
        .warning-badge {
            background: #ffc107;
            color: #212529;
            padding: 0.5rem 1rem;
            border-radius: 20px;
            font-weight: 600;
            font-size: 0.875rem;
        }
    </style>
{% endblock %}

{% block body %}
<!-- En-tête Admin -->
<div class="admin-header">
    <div class="container-fluid">
        <div class="row align-items-center">
            <div class="col-md-8">
                <h1 class="mb-1">
                    <i class="fas fa-cog fa-2x me-3"></i>Administration TechnoProd
                </h1>
                <p class="mb-0 opacity-75">
                    Panneau de configuration et gestion système
                </p>
            </div>
            <div class="col-md-4 text-end">
                <div class="warning-badge">
                    <i class="fas fa-shield-alt me-1"></i>Accès Administrateur
                </div>
            </div>
        </div>
    </div>
</div>

<div class="container-fluid">
    <!-- Navigation Admin -->
    <div class="admin-nav">
        {% if current_societe %}
            <div class="alert alert-info mb-3">
                <i class="fas fa-info-circle me-2"></i>
                <strong>Société active :</strong> {{ current_societe.displayName }}
                <span class="badge bg-{{ is_societe_mere ? 'primary' : 'success' }} ms-2">
                    {{ is_societe_mere ? 'Société Mère' : 'Société Fille' }}
                </span>
            </div>
        {% endif %}
        
        <ul class="nav nav-tabs" role="tablist" id="main-admin-tabs">
            <li class="nav-item">
                <a class="nav-link active" data-bs-toggle="tab" href="#dashboard" role="tab">
                    <i class="fas fa-tachometer-alt me-2"></i>Dashboard
                </a>
            </li>
            
            <!-- Onglet Juridique & Comptable (société mère uniquement) -->
            {% if is_societe_mere %}
            <li class="nav-item">
                <a class="nav-link" data-bs-toggle="tab" href="#juridique-comptable" role="tab">
                    <i class="fas fa-balance-scale me-2"></i>Juridique & Comptable
                </a>
            </li>
            {% endif %}
            
            
            <!-- Onglets Gestion Globale (société mère uniquement) -->
            {% if is_societe_mere %}
            <li class="nav-item">
                <a class="nav-link" data-bs-toggle="tab" href="#gestion-societes" role="tab">
                    <i class="fas fa-building-user me-2"></i>Société
                </a>
            </li>
            <li class="nav-item">
                <a class="nav-link" data-bs-toggle="tab" href="#secteurs" role="tab">
                    <i class="fas fa-map me-2"></i>Secteurs
                </a>
            </li>
            {% else %}
            <!-- Onglet Paramètres Enseigne pour société fille -->
            <li class="nav-item">
                <a class="nav-link" data-bs-toggle="tab" href="#parametres-enseigne" role="tab">
                    <i class="fas fa-cog me-2"></i>Paramètres Enseigne
                </a>
            </li>
            {% endif %}
            
            <li class="nav-item">
                <a class="nav-link" data-bs-toggle="tab" href="#transporteurs" role="tab">
                    <i class="fas fa-truck me-2"></i>Transporteurs
                </a>
            </li>
            <li class="nav-item">
                <a class="nav-link" data-bs-toggle="tab" href="#frais-port" role="tab">
                    <i class="fas fa-shipping-fast me-2"></i>Frais de Port
                </a>
            </li>
            {% if is_societe_mere %}
            <li class="nav-item">
                <a class="nav-link" data-bs-toggle="tab" href="#produits" role="tab">
                    <i class="fas fa-box me-2"></i>Produits
                </a>
            </li>
            {% endif %}
            {% if is_societe_mere %}
            <li class="nav-item">
                <a class="nav-link" data-bs-toggle="tab" href="#unites" role="tab">
                    <i class="fas fa-ruler me-2"></i>Unités
                </a>
            </li>
            {% endif %}
            {% if is_societe_mere %}
            <li class="nav-item">
                <a class="nav-link" data-bs-toggle="tab" href="#tags-clients" role="tab">
                    <i class="fas fa-tags me-2"></i>Tags Clients
                </a>
            </li>
            {% endif %}
            {% if is_societe_mere %}
            <li class="nav-item">
                <a class="nav-link" data-bs-toggle="tab" href="#parametres" role="tab">
                    <i class="fas fa-server me-2"></i>Configuration Système
                </a>
            </li>
            {% endif %}
        </ul>
    </div>

    <div class="tab-content">
        <!-- Dashboard -->
        <div class="tab-pane fade show active" id="dashboard" role="tabpanel">
            <!-- Statistiques -->
            <div class="row mb-4">
                <div class="col-md-3 mb-3">
                    <div class="stats-card">
                        <div class="stats-number">{{ stats.users }}</div>
                        <div class="stats-label">Utilisateurs</div>
                    </div>
                </div>
                <div class="col-md-3 mb-3">
                    <div class="stats-card">
                        <div class="stats-number">{{ stats.users_actifs }}</div>
                        <div class="stats-label">Actifs</div>
                    </div>
                </div>
                <div class="col-md-3 mb-3">
                    <div class="stats-card">
                        <div class="stats-number">{{ stats.admins }}</div>
                        <div class="stats-label">Administrateurs</div>
                    </div>
                </div>
                <div class="col-md-3 mb-3">
                    <div class="stats-card">
                        <div class="stats-number">{{ stats.groupes_utilisateurs }}</div>
                        <div class="stats-label">Groupes Utilisateurs</div>
                    </div>
                </div>
            </div>
            <div class="row mb-4">
                <div class="col-md-3 mb-3">
                    <div class="stats-card">
                        <div class="stats-number">{{ stats.groupes_actifs }}</div>
                        <div class="stats-label">Groupes Actifs</div>
                    </div>
                </div>
                <div class="col-md-3 mb-3">
                    <div class="stats-card">
                        <div class="stats-number">{{ stats.formes_juridiques }}</div>
                        <div class="stats-label">Formes Juridiques</div>
                    </div>
                </div>
            </div>
            <div class="row mb-4">
                <div class="col-md-4 mb-3">
                    <div class="stats-card">
                        <div class="stats-number">{{ stats.secteurs }}</div>
                        <div class="stats-label">Secteurs</div>
                    </div>
                </div>
                <div class="col-md-4 mb-3">
                    <div class="stats-card">
                        <div class="stats-number">{{ stats.produits }}</div>
                        <div class="stats-label">Produits</div>
                    </div>
                </div>
            </div>
            <div class="row mb-4">
                <div class="col-md-3 mb-3">
                    <div class="stats-card">
                        <div class="stats-number">{{ stats.tags }}</div>
                        <div class="stats-label">Tags Clients</div>
                    </div>
                </div>
                <div class="col-md-3 mb-3">
                    <div class="stats-card">
                        <div class="stats-number">{{ stats.modes_paiement }}</div>
                        <div class="stats-label">Moyens Paiement</div>
                    </div>
                </div>
                <div class="col-md-3 mb-3">
                    <div class="stats-card">
                        <div class="stats-number">{{ stats.modes_reglement }}</div>
                        <div class="stats-label">Modes Règlement</div>
                    </div>
                </div>
                <div class="col-md-3 mb-3">
                    <div class="stats-card">
                        <div class="stats-number">{{ stats.banques }}</div>
                        <div class="stats-label">Banques</div>
                    </div>
                </div>
            </div>
            <div class="row mb-4">
                <div class="col-md-3 mb-3">
                    <div class="stats-card">
                        <div class="stats-number">{{ stats.taux_tva }}</div>
                        <div class="stats-label">Taux TVA</div>
                    </div>
                </div>
                <div class="col-md-3 mb-3">
                    <div class="stats-card">
                        <div class="stats-number">{{ stats.unites }}</div>
                        <div class="stats-label">Unités</div>
                    </div>
                </div>
                <div class="col-md-3 mb-3">
                    <div class="stats-card">
                        <div class="stats-number">{{ stats.civilites }}</div>
                        <div class="stats-label">Civilités</div>
                    </div>
                </div>
            </div>
            <div class="row mb-4">
                <div class="col-md-6 mb-3">
                    <div class="stats-card">
                        <div class="stats-number">{{ stats.transporteurs }}</div>
                        <div class="stats-label">Transporteurs</div>
                    </div>
                </div>
                <div class="col-md-6 mb-3">
                    <div class="stats-card">
                        <div class="stats-number">{{ stats.frais_port }}</div>
                        <div class="stats-label">Frais de Port</div>
                    </div>
                </div>
            </div>

            <!-- Statistiques Sociétés -->
            {% if is_societe_mere %}
            <div class="row mb-4">
                <div class="col-md-6 mb-3">
                    <div class="stats-card">
                        <div class="stats-number">{{ stats.societes_meres }}</div>
                        <div class="stats-label">Sociétés Mères</div>
                    </div>
                </div>
                <div class="col-md-6 mb-3">
                    <div class="stats-card">
                        <div class="stats-number">{{ stats.societes_filles }}</div>
                        <div class="stats-label">Sociétés Filles / Enseignes</div>
                    </div>
                </div>
            </div>
            {% endif %}

            <!-- Actions rapides -->
            <div class="admin-section">
                <h3 class="section-title">
                    <i class="fas fa-bolt me-2"></i>Actions Rapides
                </h3>
                <div class="row">
                    <div class="col-md-6">
                        <h5 class="mb-3">Gestion des Utilisateurs</h5>
                        <a href="#users" class="quick-action-btn" data-bs-toggle="tab">
                            <i class="fas fa-users me-2"></i>Gérer les Utilisateurs
                        </a>
                        <a href="#" class="quick-action-btn" onclick="alert('Fonctionnalité à venir')">
                            <i class="fas fa-user-plus me-2"></i>Nouvel Utilisateur
                        </a>
                    </div>
                    <div class="col-md-6">
                        <h5 class="mb-3">Configuration Métier</h5>
                        <a href="#formes-juridiques" class="quick-action-btn" data-bs-toggle="tab">
                            <i class="fas fa-building me-2"></i>Formes Juridiques
                        </a>
                        <a href="#secteurs" class="quick-action-btn" data-bs-toggle="tab">
                            <i class="fas fa-map me-2"></i>Secteurs
                        </a>
                        {% if is_societe_mere %}
                        <a href="#produits" class="quick-action-btn" data-bs-toggle="tab">
                            <i class="fas fa-box me-2"></i>Produits
                        </a>
                        <a href="#unites" class="quick-action-btn" data-bs-toggle="tab">
                            <i class="fas fa-ruler me-2"></i>Unités
                        </a>
                        <a href="#parametres" class="quick-action-btn" data-bs-toggle="tab">
                            <i class="fas fa-server me-2"></i>Configuration Système
                        </a>
                        {% endif %}
                    </div>
                </div>
            </div>

            <!-- Informations système -->
            <div class="admin-section">
                <h3 class="section-title">
                    <i class="fas fa-info-circle me-2"></i>Informations Système
                </h3>
                <div class="row">
                    <div class="col-md-6">
                        <p><strong>Version PHP :</strong> {{ constant('PHP_VERSION') }}</p>
                        <p><strong>Version Symfony :</strong> {{ constant('Symfony\\Component\\HttpKernel\\Kernel::VERSION') }}</p>
                        <p><strong>Environnement :</strong> {{ app.environment }}</p>
                    </div>
                    <div class="col-md-6">
                        <p><strong>Debug :</strong> {{ app.debug ? 'Activé' : 'Désactivé' }}</p>
                        <p><strong>Utilisateur connecté :</strong> {{ app.user.fullName }}</p>
                        <p><strong>Rôles :</strong> {{ app.user.roles|join(', ') }}</p>
                    </div>
                </div>
            </div>
        </div>

        <!-- Juridique & Comptable (société mère uniquement) -->
        {% if is_societe_mere %}
        <div class="tab-pane fade" id="juridique-comptable" role="tabpanel">
            <div class="admin-section">
                <h3 class="section-title">
                    <i class="fas fa-balance-scale me-2"></i>Juridique & Comptable
                </h3>
                <p class="text-muted mb-4">Gestion des aspects juridiques et comptables de l'entreprise</p>
                
                <!-- Sous-navigation pour Juridique & Comptable -->
                <div class="row">
                    <div class="col-12">
                        <ul class="nav nav-pills mb-4 justify-content-center" role="tablist" id="juridique-sub-tabs">
                            <li class="nav-item">
                                <a class="nav-link active" data-bs-toggle="pill" href="#formes-juridiques-content" role="tab">
                                    <i class="fas fa-building me-2"></i>Formes Juridiques
                                </a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link" data-bs-toggle="pill" href="#moyens-paiement-content" role="tab">
                                    <i class="fas fa-money-check-alt me-2"></i>Moyens de Paiement
                                </a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link" data-bs-toggle="pill" href="#modes-reglement-content" role="tab">
                                    <i class="fas fa-credit-card me-2"></i>Modes de Règlement
                                </a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link" data-bs-toggle="pill" href="#banques-content" role="tab">
                                    <i class="fas fa-university me-2"></i>Banques
                                </a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link" data-bs-toggle="pill" href="#taux-tva-content" role="tab">
                                    <i class="fas fa-percent me-2"></i>Taux TVA
                                </a>
                            </li>
                        </ul>
                        
                        <!-- Contenu des sous-onglets juridique-comptable -->
                        <div class="tab-content">
                            <div class="tab-pane fade show active" id="formes-juridiques-content" role="tabpanel">
                                <div class="text-center">
                                    <div class="spinner-border text-primary" role="status">
                                        <span class="visually-hidden">Chargement...</span>
                                    </div>
                                    <p class="text-muted mt-2">Chargement des formes juridiques...</p>
                                </div>
                            </div>
                            <div class="tab-pane fade" id="moyens-paiement-content" role="tabpanel">
                                <div class="text-center">
                                    <div class="spinner-border text-primary" role="status">
                                        <span class="visually-hidden">Chargement...</span>
                                    </div>
                                    <p class="text-muted mt-2">Chargement des moyens de paiement...</p>
                                </div>
                            </div>
                            <div class="tab-pane fade" id="modes-reglement-content" role="tabpanel">
                                <div class="text-center">
                                    <div class="spinner-border text-primary" role="status">
                                        <span class="visually-hidden">Chargement...</span>
                                    </div>
                                    <p class="text-muted mt-2">Chargement des modes de règlement...</p>
                                </div>
                            </div>
                            <div class="tab-pane fade" id="banques-content" role="tabpanel">
                                <div class="text-center">
                                    <div class="spinner-border text-primary" role="status">
                                        <span class="visually-hidden">Chargement...</span>
                                    </div>
                                    <p class="text-muted mt-2">Chargement des banques...</p>
                                </div>
                            </div>
                            <div class="tab-pane fade" id="taux-tva-content" role="tabpanel">
                                <div class="text-center">
                                    <div class="spinner-border text-primary" role="status">
                                        <span class="visually-hidden">Chargement...</span>
                                    </div>
                                    <p class="text-muted mt-2">Chargement des taux TVA...</p>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        {% endif %}

        <!-- Gestion des sociétés -->
        <div class="tab-pane fade" id="gestion-societes" role="tabpanel">
            <div class="admin-section">
                <h3 class="section-title">
                    <i class="fas fa-building-user me-2"></i>Gestion des sociétés
                </h3>
                <p class="text-muted mb-4">Configuration multi-société et gestion des utilisateurs</p>
                
                <!-- Sous-navigation pour Gestion des sociétés -->
                <div class="row">
                    <div class="col-12">
                        <ul class="nav nav-pills mb-4 justify-content-center" role="tablist" id="societes-sub-tabs">
                            <li class="nav-item">
                                <a class="nav-link active" href="#societes-content" role="tab">
                                    <i class="fas fa-building me-2"></i>Sociétés
                                </a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link" href="#users-content" role="tab">
                                    <i class="fas fa-users me-2"></i>Utilisateurs
                                </a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link" href="#groupes-users-content" role="tab">
                                    <i class="fas fa-users-cog me-2"></i>Groupes Utilisateurs
                                </a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link" href="#themes-couleurs-content" role="tab">
                                    <i class="fas fa-palette me-2"></i>Thèmes & Couleurs
                                </a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link" href="#templates-documents-content" role="tab">
                                    <i class="fas fa-file-alt me-2"></i>Templates de documents
                                </a>
                            </li>
                        </ul>
                        
                        <!-- Contenu des sous-onglets gestion sociétés -->
                        <div class="tab-content">
                            <div class="tab-pane fade show active" id="societes-content" role="tabpanel">
                                <div class="text-center">
                                    <div class="spinner-border text-primary" role="status">
                                        <span class="visually-hidden">Chargement...</span>
                                    </div>
                                    <p class="text-muted mt-2">Chargement des sociétés...</p>
                                </div>
                            </div>
                            <div class="tab-pane fade" id="users-content" role="tabpanel">
                                <div class="text-center">
                                    <div class="spinner-border text-primary" role="status">
                                        <span class="visually-hidden">Chargement...</span>
                                    </div>
                                    <p class="text-muted mt-2">Chargement des utilisateurs...</p>
                                </div>
                            </div>
                            <div class="tab-pane fade" id="groupes-users-content" role="tabpanel">
                                <div class="text-center">
                                    <div class="spinner-border text-primary" role="status">
                                        <span class="visually-hidden">Chargement...</span>
                                    </div>
                                    <p class="text-muted mt-2">Chargement des groupes d'utilisateurs...</p>
                                </div>
                            </div>
                            <div class="tab-pane fade" id="themes-couleurs-content" role="tabpanel">
                                <div class="admin-section">
                                    <h5 class="section-title">
                                        <i class="fas fa-palette me-2"></i>Thèmes & Couleurs
                                    </h5>
                                            <div class="row">
                                                <div class="col-md-8">
                                                    <h5>Configuration des Couleurs</h5>
                                                    {% if is_societe_mere %}
                                                        <p class="text-muted">Couleurs par défaut utilisées par toutes les sociétés filles.</p>
                                                    {% else %}
                                                        <p class="text-muted">Couleurs spécifiques à cette enseigne. Hérite de la société mère si non défini.</p>
                                                    {% endif %}
                                                    
                                                    <form id="colors-form" class="mb-4">
                                                        <div class="row">
                                                            <div class="col-md-4 mb-3">
                                                                <label for="primary-color" class="form-label">Couleur Primaire</label>
                                                                <input type="color" class="form-control form-control-color" id="primary-color" name="primary" value="#dc3545" title="Couleur primaire">
                                                                <div class="form-text">Couleur principale de l'interface</div>
                                                            </div>
                                                            <div class="col-md-4 mb-3">
                                                                <label for="secondary-color" class="form-label">Couleur Secondaire</label>
                                                                <input type="color" class="form-control form-control-color" id="secondary-color" name="secondary" value="#6c757d" title="Couleur secondaire">
                                                                <div class="form-text">Couleur pour les éléments secondaires</div>
                                                            </div>
                                                            <div class="col-md-4 mb-3">
                                                                <label for="tertiary-color" class="form-label">Couleur Tertiaire</label>
                                                                <input type="color" class="form-control form-control-color" id="tertiary-color" name="tertiary" value="#28a745" title="Couleur tertiaire">
                                                                <div class="form-text">Couleur d'accent et succès</div>
                                                            </div>
                                                        </div>
                                                        
                                                        <div class="row">
                                                            <div class="col-md-6 mb-3">
                                                                <label for="theme-select" class="form-label">Thème Prédéfini</label>
                                                                <select class="form-select" id="theme-select">
                                                                    <option value="default">Défaut (Rouge)</option>
                                                                    <option value="blue">Bleu (TechnoGrav)</option>
                                                                    <option value="green">Vert (TechnoPrint)</option>
                                                                    <option value="yellow">Jaune (TechnoBuro)</option>
                                                                </select>
                                                                <div class="form-text">Applique un thème prédéfini</div>
                                                            </div>
                                                            <div class="col-md-6 mb-3">
                                                                <label class="form-label">Actions</label><br>
                                                                <button type="submit" class="btn btn-primary me-2">
                                                                    <i class="fas fa-save"></i> Enregistrer
                                                                </button>
                                                                <button type="button" class="btn btn-outline-secondary" id="reset-colors">
                                                                    <i class="fas fa-undo"></i> Réinitialiser
                                                                </button>
                                                            </div>
                                                        </div>
                                                    </form>
                                                    
                                                    <h5 class="mt-4">Gestion du Logo</h5>
                                                    <div id="logo-management">
                                                        <div class="row">
                                                            <div class="col-md-6">
                                                                <div class="border rounded p-3 text-center" id="logo-preview">
                                                                    <div id="logo-current" style="display: none;">
                                                                        <img id="logo-image" src="" alt="Logo actuel" class="img-thumbnail mb-2" style="max-height: 100px;">
                                                                        <br>
                                                                        <button type="button" class="btn btn-outline-danger btn-sm" id="delete-logo">
                                                                            <i class="fas fa-trash"></i> Supprimer
                                                                        </button>
                                                                    </div>
                                                                    <div id="logo-placeholder">
                                                                        <i class="fas fa-image fa-3x text-muted mb-2"></i>
                                                                        <p class="text-muted">Aucun logo défini</p>
                                                                    </div>
                                                                </div>
                                                            </div>
                                                            <div class="col-md-6">
                                                                <div class="mb-3">
                                                                    <label for="logo-upload" class="form-label">Télécharger un nouveau logo</label>
                                                                    <input type="file" class="form-control" id="logo-upload" accept="image/*">
                                                                    <div class="form-text">Formats acceptés: JPG, PNG, GIF (max 2MB)</div>
                                                                </div>
                                                                <button type="button" class="btn btn-success" id="upload-logo" disabled>
                                                                    <i class="fas fa-upload"></i> Télécharger
                                                                </button>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                                
                                                <div class="col-md-4">
                                                    <h5>Prévisualisation</h5>
                                                    <div id="theme-preview" class="border rounded p-3">
                                                        <div class="preview-navbar mb-3" style="background: var(--bs-primary, #dc3545); color: white; padding: 10px; border-radius: 4px;">
                                                            <strong>Navigation</strong>
                                                        </div>
                                                        <div class="preview-content">
                                                            <button class="btn btn-primary mb-2">Bouton Principal</button><br>
                                                            <button class="btn btn-secondary mb-2">Bouton Secondaire</button><br>
                                                            <button class="btn btn-success mb-2">Bouton Succès</button><br>
                                                            <div class="alert alert-primary" role="alert">Exemple d'alerte primaire</div>
                                                        </div>
                                                    </div>
                                                    
                                                    <div class="mt-3">
                                                        <h6>Informations d'héritage</h6>
                                                        <div id="inheritance-info">
                                                            <small class="text-muted">Chargement...</small>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                </div>
                            </div>
                            <div class="tab-pane fade" id="templates-documents-content" role="tabpanel">
                                <div class="admin-section">
                                    <h5 class="section-title">
                                        <i class="fas fa-file-alt me-2"></i>Templates de documents
                                    </h5>
                                    <div class="row">
                                        <div class="col-12">
                                            {% if is_societe_mere %}
                                                <p class="text-muted">Templates de base utilisés par défaut par toutes les sociétés.</p>
                                            {% else %}
                                                <p class="text-muted">Templates spécifiques à cette enseigne (surcharge optionnelle).</p>
                                            {% endif %}
                                            <div id="templates-documents-container" style="position: relative; overflow: hidden;"></div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>


        <!-- Transporteurs -->
        <div class="tab-pane fade" id="transporteurs" role="tabpanel">
            <div class="admin-section">
                <h3 class="section-title">
                    <i class="fas fa-truck me-2"></i>Gestion des Transporteurs
                </h3>
                <p class="text-muted">Chargement en cours...</p>
                <div class="text-center">
                    <div class="spinner-border text-primary" role="status">
                        <span class="visually-hidden">Chargement...</span>
                    </div>
                </div>
            </div>
        </div>

        <!-- Frais de Port -->
        <div class="tab-pane fade" id="frais-port" role="tabpanel">
            <div class="admin-section">
                <h3 class="section-title">
                    <i class="fas fa-shipping-fast me-2"></i>Gestion des Frais de Port
                </h3>
                <p class="text-muted">Chargement en cours...</p>
                <div class="text-center">
                    <div class="spinner-border text-primary" role="status">
                        <span class="visually-hidden">Chargement...</span>
                    </div>
                </div>
            </div>
        </div>

        <!-- Placeholder pour les autres onglets -->
        <div class="tab-pane fade" id="formes-juridiques" role="tabpanel">
            <div class="admin-section">
                <h3 class="section-title">
                    <i class="fas fa-building me-2"></i>Gestion des Formes Juridiques
                </h3>
                <p class="text-muted">Chargement en cours...</p>
                <div class="text-center">
                    <div class="spinner-border text-primary" role="status">
                        <span class="visually-hidden">Chargement...</span>
                    </div>
                </div>
            </div>
        </div>


        <!-- Configuration Système (société mère uniquement) -->
        {% if is_societe_mere %}
        <div class="tab-pane fade" id="parametres" role="tabpanel">
            <div class="admin-section">
                <h3 class="section-title">
                    <i class="fas fa-server me-2"></i>Configuration Système
                </h3>
                <p class="text-muted mb-4">Configuration technique et paramètres généraux de l'application</p>
                <div class="text-center">
                    <div class="spinner-border text-primary" role="status">
                        <span class="visually-hidden">Chargement...</span>
                    </div>
                </div>
            </div>
        </div>
        {% endif %}

        <div class="tab-pane fade" id="users" role="tabpanel">
            <div class="admin-section">
                <h3 class="section-title">
                    <i class="fas fa-users me-2"></i>Gestion des Utilisateurs
                </h3>
                <p class="text-muted">Chargement en cours...</p>
                <div class="text-center">
                    <div class="spinner-border text-primary" role="status">
                        <span class="visually-hidden">Chargement...</span>
                    </div>
                </div>
            </div>
        </div>

        <div class="tab-pane fade" id="secteurs" role="tabpanel">
            {% include 'admin/secteurs.html.twig' with {'google_maps_api_key': google_maps_api_key, 'secteurs': secteurs} %}
            <script>
            // Forcer l'initialisation des secteurs après chargement du contenu
            document.addEventListener('DOMContentLoaded', function() {
                // Attendre que l'onglet soit activé
                const secteurTab = document.querySelector('a[href="#secteurs"]');
                if (secteurTab) {
                    secteurTab.addEventListener('shown.bs.tab', function() {
                        console.log('🗺️ Onglet secteurs activé - initialisation forcée');
                        setTimeout(() => {
                            if (typeof window.initSecteurs === 'function') {
                                try {
                                    window.initSecteurs();
                                    console.log('✅ initSecteurs forcée réussie');
                                } catch (error) {
                                    console.error('❌ Erreur initSecteurs forcée:', error);
                                }
                            } else {
                                console.warn('⚠️ window.initSecteurs non définie');
                            }
                        }, 100);
                    });
                }
            });
            </script>
        </div>


        <!-- Produits (société mère uniquement) -->
        {% if is_societe_mere %}
        <div class="tab-pane fade" id="produits" role="tabpanel">
            <div class="admin-section">
                <h3 class="section-title">
                    <i class="fas fa-box me-2"></i>Gestion des Produits
                </h3>
                <p class="text-muted">Chargement en cours...</p>
                <div class="text-center">
                    <div class="spinner-border text-primary" role="status">
                        <span class="visually-hidden">Chargement...</span>
                    </div>
                </div>
            </div>
        </div>
        {% endif %}

        <!-- Unités (société mère uniquement) -->
        {% if is_societe_mere %}
        <div class="tab-pane fade" id="unites" role="tabpanel">
            <div class="admin-section">
                <h3 class="section-title">
                    <i class="fas fa-ruler me-2"></i>Gestion des Unités
                </h3>
                <p class="text-muted">Chargement en cours...</p>
                <div class="text-center">
                    <div class="spinner-border text-primary" role="status">
                        <span class="visually-hidden">Chargement...</span>
                    </div>
                </div>
            </div>
        </div>
        {% endif %}

        <!-- Tags Clients (société mère uniquement) -->
        {% if is_societe_mere %}
        <div class="tab-pane fade" id="tags-clients" role="tabpanel">
            <div class="admin-section">
                <h3 class="section-title">
                    <i class="fas fa-tags me-2"></i>Gestion des Tags Clients
                </h3>
                <p class="text-muted">Chargement en cours...</p>
                <div class="text-center">
                    <div class="spinner-border text-primary" role="status">
                        <span class="visually-hidden">Chargement...</span>
                    </div>
                </div>
            </div>
        </div>
        {% endif %}


        <!-- Moyens de Paiement -->
        <div class="tab-pane fade" id="moyens-paiement" role="tabpanel">
            <div class="admin-section">
                <h3 class="section-title">
                    <i class="fas fa-money-check-alt me-2"></i>Gestion des Moyens de Paiement
                </h3>
                <p class="text-muted">Chargement en cours...</p>
                <div class="text-center">
                    <div class="spinner-border text-primary" role="status">
                        <span class="visually-hidden">Chargement...</span>
                    </div>
                </div>
            </div>
        </div>

        <!-- Modes de Règlement -->
        <div class="tab-pane fade" id="modes-reglement" role="tabpanel">
            <div class="admin-section">
                <h3 class="section-title">
                    <i class="fas fa-credit-card me-2"></i>Gestion des Modes de Règlement
                </h3>
                <p class="text-muted">Chargement en cours...</p>
                <div class="text-center">
                    <div class="spinner-border text-primary" role="status">
                        <span class="visually-hidden">Chargement...</span>
                    </div>
                </div>
            </div>
        </div>

        <!-- Banques -->
        <div class="tab-pane fade" id="banques" role="tabpanel">
            <div class="admin-section">
                <h3 class="section-title">
                    <i class="fas fa-university me-2"></i>Gestion des Banques
                </h3>
                <p class="text-muted">Chargement en cours...</p>
                <div class="text-center">
                    <div class="spinner-border text-primary" role="status">
                        <span class="visually-hidden">Chargement...</span>
                    </div>
                </div>
            </div>
        </div>

        <!-- Taux TVA -->
        <div class="tab-pane fade" id="taux-tva" role="tabpanel">
            <div class="admin-section">
                <h3 class="section-title">
                    <i class="fas fa-percent me-2"></i>Gestion des Taux TVA
                </h3>
                <p class="text-muted">Chargement en cours...</p>
                <div class="text-center">
                    <div class="spinner-border text-primary" role="status">
                        <span class="visually-hidden">Chargement...</span>
                    </div>
                </div>
            </div>
        </div>


        <!-- Civilités -->
        <div class="tab-pane fade" id="civilites" role="tabpanel">
            <div class="admin-section">
                <h3 class="section-title">
                    <i class="fas fa-user me-2"></i>Gestion des Civilités
                </h3>
                <p class="text-muted">Chargement en cours...</p>
                <div class="text-center">
                    <div class="spinner-border text-primary" role="status">
                        <span class="visually-hidden">Chargement...</span>
                    </div>
                </div>
            </div>
        </div>

        <!-- Transporteurs -->
        <div class="tab-pane fade" id="transporteurs" role="tabpanel">
            <div class="admin-section">
                <h3 class="section-title">
                    <i class="fas fa-truck me-2"></i>Gestion des Transporteurs
                </h3>
                <p class="text-muted">Chargement en cours...</p>
                <div class="text-center">
                    <div class="spinner-border text-primary" role="status">
                        <span class="visually-hidden">Chargement...</span>
                    </div>
                </div>
            </div>
        </div>

        <!-- Frais de Port -->
        <div class="tab-pane fade" id="frais-port" role="tabpanel">
            <div class="admin-section">
                <h3 class="section-title">
                    <i class="fas fa-shipping-fast me-2"></i>Gestion des Frais de Port
                </h3>
                <p class="text-muted">Chargement en cours...</p>
                <div class="text-center">
                    <div class="spinner-border text-primary" role="status">
                        <span class="visually-hidden">Chargement...</span>
                    </div>
                </div>
            </div>
        </div>

        
        <!-- Section Paramètres Enseigne (société fille uniquement) -->
        {% if not is_societe_mere %}
        <div class="tab-pane fade" id="parametres-enseigne" role="tabpanel">
            <div class="admin-section">
                <h3 class="section-title">
                    <i class="fas fa-cog me-2"></i>Paramètres de l'Enseigne
                </h3>
                
                <div class="row">
                    <div class="col-md-6">
                        <h5>Identité Visuelle</h5>
                        <p class="text-muted">Logo, couleurs et éléments visuels spécifiques à cette enseigne.</p>
                        <div id="identite-visuelle"></div>
                    </div>
                    <div class="col-md-6">
                        <h5>Communication</h5>
                        <p class="text-muted">Signature email, coordonnées spécifiques à l'enseigne.</p>
                        <div id="communication-enseigne"></div>
                    </div>
                </div>
            </div>
        </div>
        {% endif %}

        <!-- Section Utilisateurs (société mère uniquement) -->
        {% if is_societe_mere %}
        <div class="tab-pane fade" id="utilisateurs" role="tabpanel">
            <div class="admin-section">
                <h3 class="section-title">
                    <i class="fas fa-users me-2"></i>Gestion des Utilisateurs
                </h3>
                <div id="utilisateurs-management"></div>
            </div>
        </div>
        {% endif %}

    </div>
</div>

{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script>
    document.addEventListener('DOMContentLoaded', function() {
        console.log('🔍 DEBUG: DOM Content Loaded - Admin Dashboard Initialized');
        console.log('🔍 DEBUG: Bootstrap available:', typeof bootstrap !== 'undefined');
        console.log('🔍 DEBUG: Main admin tabs found:', document.querySelectorAll('#main-admin-tabs [data-bs-toggle="tab"]').length);
        console.log('🔍 DEBUG: Pill tabs found:', document.querySelectorAll('[data-bs-toggle="pill"]').length);
        console.log('🔍 DEBUG: All tab elements:', document.querySelectorAll('[data-bs-toggle]').length);
        
        // CORRECTION: Masquer immédiatement tout le contenu parasite au chargement, sauf dashboard actif
        setTimeout(() => {
            document.querySelectorAll('.tab-pane:not(#dashboard)').forEach(pane => {
                if (!pane.id.includes('-content')) { // Garder les sous-onglets
                    pane.classList.remove('show', 'active');
                    pane.style.display = 'none';
                    pane.style.visibility = 'hidden';
                    pane.style.opacity = '0';
                    console.log('🔍 DEBUG: Masqué onglet parasite:', pane.id);
                }
            });
        }, 500);
        
        // Log tous les clics sur les onglets pour debug
        document.addEventListener('click', function(e) {
            if (e.target.matches('[data-bs-toggle="tab"], [data-bs-toggle="pill"]')) {
                console.log('🔍 DEBUG: Tab clicked:', e.target.getAttribute('href'), 'Type:', e.target.getAttribute('data-bs-toggle'));
            }
        });
        
        // Gérer le chargement AJAX des onglets PRINCIPAUX seulement
        document.querySelectorAll('#main-admin-tabs [data-bs-toggle="tab"]').forEach(function(tab) {
            tab.addEventListener('shown.bs.tab', function(e) {
                const targetTab = e.target.getAttribute('href');
                loadTabContent(targetTab);
            });
        });
        
        // Gérer les sous-onglets avec chargement conditionnel
        document.querySelectorAll('[data-bs-toggle="pill"]').forEach(function(pill) {
            pill.addEventListener('shown.bs.tab', function(e) {
                const targetTab = e.target.getAttribute('href');
                console.log('🔄 Sub-tab switched to:', targetTab);
                
                // Certains sous-onglets nécessitent un chargement spécial
                if (targetTab === '#templates-documents-content' || 
                    targetTab === '#themes-couleurs-content') {
                    loadTabContent(targetTab);
                }
            });
        });
        
        function loadTabContent(tabId) {
            console.log('🔍 DEBUG: loadTabContent called for:', tabId);
            console.log('🔍 DEBUG: Current URL:', window.location.href);
            console.log('🔍 DEBUG: Timestamp:', new Date().toISOString());
            
            const tabContent = document.querySelector(tabId + ' .admin-section');
            console.log('🔍 DEBUG: Selector used:', tabId + ' .admin-section');
            console.log('🔍 DEBUG: tabContent element:', tabContent);
            console.log('🔍 DEBUG: tabContent found:', !!tabContent);
            console.log('🔍 DEBUG: tabContent.dataset.loaded:', tabContent?.dataset?.loaded);
            
            if (!tabContent) {
                console.log('🔍 DEBUG: No tabContent found for selector:', tabId + ' .admin-section');
                return;
            }
            
            if (tabContent.dataset.loaded) {
                console.log('🔍 DEBUG: Tab already loaded, but reactivating:', tabId);
                
                // CORRECTION: Permettre le rechargement - activer l'onglet même s'il est déjà chargé
                const tabPane = document.querySelector(tabId);
                if (tabPane) {
                    // Désactiver tous les autres onglets
                    document.querySelectorAll('.tab-pane').forEach(pane => {
                        pane.classList.remove('show', 'active');
                        pane.style.display = 'none';
                        pane.style.visibility = 'hidden';
                        pane.style.opacity = '0';
                    });
                    
                    // Activer l'onglet courant
                    tabPane.classList.add('show', 'active');
                    tabPane.style.display = 'block';
                    tabPane.style.visibility = 'visible';
                    tabPane.style.opacity = '1';
                    
                    // Scroller vers le haut
                    setTimeout(() => {
                        window.scrollTo(0, 0);
                        tabPane.scrollIntoView({ behavior: 'smooth', block: 'start' });
                    }, 100);
                    
                    console.log('🔍 DEBUG: Tab reactivated successfully:', tabId);
                }
                return;
            }
            
            // Gérer l'onglet juridique-comptable avec sous-onglets et AJAX
            if (tabId === '#juridique-comptable') {
                setupJuridiqueComptableTabFixed();
                tabContent.dataset.loaded = 'true';
                return;
            }
            
            if (tabId === '#gestion-societes') {
                console.log('🔍 DEBUG: Activating gestion-societes tab - using Fixed version');
                const societesPane = document.querySelector('#gestion-societes');
                if (societesPane) {
                    // Masquer tous les autres onglets
                    document.querySelectorAll('.tab-pane').forEach(pane => {
                        pane.classList.remove('show', 'active');
                        pane.style.display = 'none';
                        pane.style.visibility = 'hidden';
                        pane.style.opacity = '0';
                    });
                    // Activer l'onglet societes
                    societesPane.classList.add('show', 'active');
                    societesPane.style.display = 'block';
                    societesPane.style.visibility = 'visible';
                    societesPane.style.opacity = '1';
                    console.log('✅ DEBUG: gestion-societes activated successfully');
                    
                    // Initialiser les sous-onglets avec notre logique Fixed
                    setTimeout(() => {
                        setupSocietesSubTabsFixed();
                    }, 100);
                } else {
                    console.error('🔍 TEST: #gestion-societes not found!');
                }
                tabContent.dataset.loaded = 'true';
                return;
            }
            
            let url = '';
            console.log('🔍 DEBUG: Entering switch for tabId:', tabId);
            switch(tabId) {
                case '#secteurs':
                    console.log('🔍 DEBUG: Case #secteurs matched');
                    // Secteurs utilise une interface dédiée - pas de chargement AJAX
                    tabContent.dataset.loaded = 'true';
                    
                    // CORRECTION: Activer l'onglet secteurs même sans AJAX
                    const secteursPane = document.querySelector('#secteurs');
                    if (secteursPane) {
                        // Désactiver tous les autres onglets
                        document.querySelectorAll('.tab-pane').forEach(pane => {
                            pane.classList.remove('show', 'active');
                            pane.style.display = 'none';
                            pane.style.visibility = 'hidden';
                            pane.style.opacity = '0';
                        });
                        
                        // Activer l'onglet secteurs
                        secteursPane.classList.add('show', 'active');
                        secteursPane.style.display = 'block';
                        secteursPane.style.visibility = 'visible';
                        secteursPane.style.opacity = '1';
                        
                        console.log('🔍 DEBUG: Secteurs tab activated');
                    }
                    return;
                case '#frais-port':
                    url = '{{ path("app_admin_frais_port") }}';
                    console.log('🔍 DEBUG: Case #frais-port matched, URL:', url);
                    break;
                case '#parametres':
                    url = '{{ path("app_admin_settings") }}';
                    break;
                case '#produits':
                    url = '{{ path("app_admin_produits") }}';
                    break;
                case '#unites':
                    url = '{{ path("app_admin_unites") }}';
                    break;
                case '#tags-clients':
                    url = '{{ path("app_admin_tags") }}';
                    break;
                case '#parametres-app':
                    url = '{{ path("app_admin_settings") }}';
                    break;
                case '#parametres-enseigne':
                    url = '{{ path("app_admin_settings") }}';
                    break;
                case '#civilites':
                    url = '{{ path("app_admin_civilites") }}';
                    break;
                case '#transporteurs':
                    url = '{{ path("app_admin_transporteurs") }}';
                    break;
                case '#frais-port':
                    url = '{{ path("app_admin_frais_port") }}';
                    break;
            }
            
            console.log('🔍 DEBUG: After switch - URL is:', url);
            console.log('🔍 DEBUG: URL is truthy:', !!url);
            
            if (url) {
                console.log('🔍 DEBUG: Loading tab:', tabId, 'URL:', url);
                fetch(url, {
                        credentials: 'same-origin',
                        headers: {
                            'X-Requested-With': 'XMLHttpRequest'
                        }
                    })
                    .then(response => {
                        console.log('🔍 DEBUG: Response received for', tabId);
                        console.log('🔍 DEBUG: Response status:', response.status);
                        console.log('🔍 DEBUG: Response URL:', response.url);
                        
                        // Check if redirected to login
                        if (response.url.includes('/login')) {
                            throw new Error('Session expired - redirected to login');
                        }
                        
                        if (!response.ok) {
                            throw new Error(`HTTP ${response.status}: ${response.statusText}`);
                        }
                        return response.text();
                    })
                    .then(html => {
                        console.log('🔍 DEBUG: HTML loaded for', tabId, '- Length:', html.length);
                        console.log('🔍 DEBUG: HTML preview:', html.substring(0, 200));
                        // CORRECTION: Ne pas écraser la structure Bootstrap, créer un container
                        console.log('🔍 DEBUG: Original tabContent structure preserved');
                        tabContent.innerHTML = `<div class="loaded-content">${html}</div>`;
                        tabContent.dataset.loaded = 'true';
                        console.log('🔍 DEBUG: Tab content successfully set for', tabId);
                        
                        // CORRECTION: Rendre l'onglet visible avec les classes Bootstrap
                        const tabPane = document.querySelector(tabId);
                        console.log('🔍 DEBUG: TabPane found:', !!tabPane, 'Current classes:', tabPane?.className);
                        
                        if (tabPane) {
                            // CORRECTION: Masquer TOUT le contenu statique parasite
                            document.querySelectorAll('.tab-pane').forEach(pane => {
                                pane.classList.remove('show', 'active');
                                pane.style.display = 'none';
                                pane.style.visibility = 'hidden';
                                pane.style.opacity = '0';
                            });
                            
                            // Activer SEULEMENT l'onglet courant
                            tabPane.classList.add('show', 'active');
                            tabPane.style.display = 'block';
                            tabPane.style.visibility = 'visible';
                            tabPane.style.opacity = '1';
                            
                            // Scroller vers le haut pour voir le contenu
                            setTimeout(() => {
                                window.scrollTo(0, 0);
                                tabPane.scrollIntoView({ behavior: 'smooth', block: 'start' });
                            }, 100);
                            
                            console.log('🔍 DEBUG: Onglet activé et visible:', tabId);
                        }
                        
                        // Exécuter les scripts qui sont dans le HTML chargé
                        const scripts = tabContent.querySelectorAll('script');
                        scripts.forEach(script => {
                            const newScript = document.createElement('script');
                            if (script.src) {
                                newScript.src = script.src;
                            } else {
                                newScript.textContent = script.textContent;
                            }
                            document.head.appendChild(newScript);
                            console.log('Script executed for tab:', tabId);
                        });
                        
                        // Initialiser les fonctions JavaScript spécifiques à chaque onglet
                        // Attendre que les scripts soient exécutés
                        setTimeout(() => {
                            console.log('🔍 DEBUG: Initializing tab:', tabId);
                            console.log('🔍 DEBUG: Available window functions:', Object.keys(window).filter(k => k.startsWith('init')));
                            
                            let functionName = '';
                            let initFunction = null;
                            
                            switch(tabId) {
                                case '#transporteurs':
                                    functionName = 'initTransporteurs';
                                    initFunction = window.initTransporteurs;
                                    break;
                                case '#frais-port':
                                    functionName = 'initFraisPort';
                                    initFunction = window.initFraisPort;
                                    break;
                                case '#formes-juridiques':
                                    functionName = 'initFormesJuridiques';
                                    initFunction = window.initFormesJuridiques;
                                    break;
                                case '#tags-clients':
                                    functionName = 'initTagsClients';
                                    initFunction = window.initTagsClients;
                                    break;
                                case '#moyens-paiement':
                                    functionName = 'initModesPaiement';
                                    initFunction = window.initModesPaiement;
                                    break;
                                case '#modes-reglement':
                                    functionName = 'initModesReglement';
                                    initFunction = window.initModesReglement;
                                    break;
                                case '#banques':
                                    functionName = 'initBanques';
                                    initFunction = window.initBanques;
                                    break;
                                case '#taux-tva':
                                    functionName = 'initTauxTva';
                                    initFunction = window.initTauxTva;
                                    break;
                                case '#civilites':
                                    functionName = 'initCivilites';
                                    initFunction = window.initCivilites;
                                    break;
                                case '#transporteurs':
                                    functionName = 'initTransporteurs';
                                    initFunction = window.initTransporteurs;
                                    break;
                                case '#frais-port':
                                    functionName = 'initFraisPort';
                                    initFunction = window.initFraisPort;
                                    break;
                                case '#secteurs':
                                    functionName = 'initSecteurs';
                                    initFunction = window.initSecteurs;
                                    break;
                            }
                            
                            if (typeof initFunction === 'function') {
                                console.log(`✅ Successfully calling ${functionName}`);
                                try {
                                    initFunction();
                                    console.log(`✅ ${functionName} executed successfully`);
                                } catch (error) {
                                    console.error(`❌ Error executing ${functionName}:`, error);
                                }
                            } else {
                                console.warn(`⚠️ ${functionName} not found for tab ${tabId} - this might be normal for some tabs`);
                                // Ne pas traiter comme une erreur si la fonction n'existe pas
                                // certains onglets peuvent ne pas avoir de fonction d'initialisation
                            }
                        }, 100);
                    })
                    .catch(error => {
                        console.error('Erreur de chargement:', error);
                        
                        let errorHtml;
                        if (error.message.includes('Session expired')) {
                            errorHtml = `
                                <div class="alert alert-warning">
                                    <h5><i class="fas fa-exclamation-triangle me-2"></i>Session expirée</h5>
                                    <p>Votre session d'administration a expiré.</p>
                                    <button class="btn btn-primary" onclick="window.location.reload()">
                                        <i class="fas fa-sync me-2"></i>Recharger la page
                                    </button>
                                </div>
                            `;
                        } else {
                            errorHtml = `
                                <div class="alert alert-danger">
                                    <h5><i class="fas fa-exclamation-circle me-2"></i>Erreur de chargement</h5>
                                    <p><strong>Onglet:</strong> ${tabId}</p>
                                    <p><strong>URL:</strong> ${url}</p>
                                    <p><strong>Erreur:</strong> ${error.message}</p>
                                    <button class="btn btn-outline-primary" onclick="window.location.reload()">
                                        <i class="fas fa-sync me-2"></i>Recharger la page
                                    </button>
                                </div>
                            `;
                        }
                        
                        tabContent.innerHTML = errorHtml;
                    });
            } else {
                // Gestion des onglets sans URL AJAX (contenu inclus directement)
                console.log('Tab without AJAX URL:', tabId);
                
                // Attendre que le contenu soit disponible puis initialiser
                setTimeout(() => {
                    if (tabId === '#secteurs' && typeof window.initSecteurs === 'function') {
                        console.log('🚀 Initialisation onglet secteurs (contenu direct)');
                        try {
                            window.initSecteurs();
                            console.log('✅ initSecteurs executed successfully');
                        } catch (error) {
                            console.error('❌ Error executing initSecteurs:', error);
                        }
                    }
                }, 200);
            }
        }
        
        // Fonction pour configurer l'onglet Juridique & Comptable
        function setupJuridiqueComptableTab() {
            console.log('🔍 Setup Juridique & Comptable tab');
            
            // CORRECTION: Masquer tous les autres onglets et activer Juridique & Comptable
            setTimeout(() => {
                document.querySelectorAll('.tab-pane').forEach(pane => {
                    pane.classList.remove('show', 'active');
                    pane.style.display = 'none';
                    pane.style.visibility = 'hidden';
                    pane.style.opacity = '0';
                });
                
                // Activer l'onglet Juridique & Comptable
                const juridiquePane = document.querySelector('#juridique-comptable');
                console.log('🔍 DEBUG: Searching for #juridique-comptable, found:', !!juridiquePane);
                if (juridiquePane) {
                    juridiquePane.classList.add('show', 'active');
                    juridiquePane.style.display = 'block';
                    juridiquePane.style.visibility = 'visible';
                    juridiquePane.style.opacity = '1';
                    console.log('🔍 DEBUG: Onglet Juridique & Comptable activé');
                    console.log('🔍 DEBUG: juridiquePane classes:', juridiquePane.className);
                    console.log('🔍 DEBUG: juridiquePane visible:', juridiquePane.offsetHeight > 0);
                } else {
                    console.error('🔍 ERROR: #juridique-comptable not found!');
                    console.log('🔍 DEBUG: Available tab-panes:', Array.from(document.querySelectorAll('.tab-pane')).map(p => p.id));
                }
            }, 100);
            
            // Gérer les sous-onglets de Juridique & Comptable
            const juridiqueTabs = document.querySelectorAll('#juridique-sub-tabs [data-bs-toggle="pill"]');
            console.log('🔍 DEBUG: Found juridique sub-tabs:', juridiqueTabs.length);
            juridiqueTabs.forEach((tab, index) => {
                console.log('🔍 DEBUG: Sub-tab', index, ':', tab.getAttribute('href'));
                tab.addEventListener('shown.bs.tab', function(e) {
                    const targetSubTab = e.target.getAttribute('href');
                    console.log('🔍 DEBUG: Sub-tab clicked:', targetSubTab);
                    loadJuridiqueComptableSubTab(targetSubTab);
                });
            });
            
            // Charger le premier sous-onglet par défaut (formes juridiques)
            loadJuridiqueComptableSubTabFixed('#formes-juridiques-content');
        }
        
        // Version corrigée de setupJuridiqueComptableTab avec forçage CSS
        function setupJuridiqueComptableTabFixed() {
            console.log('🔍 Setup Juridique & Comptable tab (version corrigée)');
            
            // Activer l'onglet principal
            setTimeout(() => {
                document.querySelectorAll('.tab-pane').forEach(pane => {
                    pane.classList.remove('show', 'active');
                    pane.style.display = 'none';
                    pane.style.visibility = 'hidden';
                    pane.style.opacity = '0';
                });
                
                const juridiquePane = document.querySelector('#juridique-comptable');
                if (juridiquePane) {
                    juridiquePane.classList.add('show', 'active');
                    juridiquePane.style.display = 'block';
                    juridiquePane.style.visibility = 'visible';
                    juridiquePane.style.opacity = '1';
                    console.log('🔍 DEBUG: Onglet Juridique & Comptable activé');
                }
            }, 100);
            
            // Gérer les sous-onglets
            const juridiqueTabs = document.querySelectorAll('#juridique-sub-tabs [data-bs-toggle="pill"]');
            juridiqueTabs.forEach(tab => {
                tab.addEventListener('shown.bs.tab', function(e) {
                    const targetSubTab = e.target.getAttribute('href');
                    loadJuridiqueComptableSubTabFixed(targetSubTab);
                });
            });
            
            // Charger le premier sous-onglet par défaut
            setTimeout(() => {
                loadJuridiqueComptableSubTabFixed('#formes-juridiques-content');
            }, 200);
        }
        
        // Fonction pour configurer l'onglet Gestion des Sociétés
        function setupGestionSocietesTab() {
            console.log('🔍 Setup Gestion Sociétés tab');
            
            // CORRECTION: Masquer tous les autres onglets et activer Gestion Sociétés
            setTimeout(() => {
                document.querySelectorAll('.tab-pane').forEach(pane => {
                    pane.classList.remove('show', 'active');
                    pane.style.display = 'none';
                    pane.style.visibility = 'hidden';
                    pane.style.opacity = '0';
                });
                
                // Activer l'onglet Gestion Sociétés
                const gestionPane = document.querySelector('#gestion-societes');
                if (gestionPane) {
                    gestionPane.classList.add('show', 'active');
                    gestionPane.style.display = 'block';
                    gestionPane.style.visibility = 'visible';
                    gestionPane.style.opacity = '1';
                    console.log('🔍 DEBUG: Onglet Gestion Sociétés activé');
                }
                
                // Masquer aussi toutes les div.admin-section parasites qui traînent
                document.querySelectorAll('#gestion-societes .admin-section').forEach((adminSection, index) => {
                    if (index > 0) { // Garder seulement la première
                        adminSection.style.display = 'none';
                        console.log('🔍 DEBUG: Masqué admin-section parasite #', index);
                    }
                });
            }, 100);
            
            // Gérer les sous-onglets de Gestion des Sociétés avec CSS forcing
            const gestionSocietesTabs = document.querySelectorAll('#societes-sub-tabs .nav-link');
            gestionSocietesTabs.forEach(tab => {
                tab.addEventListener('click', function(e) {
                    e.preventDefault();
                    const targetSubTab = e.target.getAttribute('href');
                    loadGestionSocietesSubTabFixed(targetSubTab);
                });
            });
            
            // Charger le premier sous-onglet par défaut (sociétés) avec CSS forcing
            loadGestionSocietesSubTabFixed('#societes-content');
        }
        
        
        // Fonction pour charger les sous-onglets Juridique & Comptable
        function loadJuridiqueComptableSubTab(subTabId) {
            console.log('🔍 Loading juridique-comptable sub-tab:', subTabId);
            
            let url = '';
            let targetContentId = '';
            
            switch(subTabId) {
                case '#formes-juridiques-content':
                    url = '{{ path("app_admin_formes_juridiques") }}';
                    targetContentId = '#formes-juridiques-content';
                    break;
                case '#moyens-paiement-content':
                    url = '{{ path("app_admin_modes_paiement") }}';
                    targetContentId = '#moyens-paiement-content';
                    break;
                case '#modes-reglement-content':
                    url = '{{ path("app_admin_modes_reglement") }}';
                    targetContentId = '#modes-reglement-content';
                    break;
                case '#banques-content':
                    url = '{{ path("app_admin_banques") }}';
                    targetContentId = '#banques-content';
                    break;
                case '#taux-tva-content':
                    url = '{{ path("app_admin_taux_tva") }}';
                    targetContentId = '#taux-tva-content';
                    break;
            }
            
            console.log('🔍 DEBUG: url=', url, 'targetContentId=', targetContentId);
            console.log('🔍 DEBUG: Searching for element with selector:', targetContentId);
            console.log('🔍 DEBUG: All elements with id containing "content":', document.querySelectorAll('[id*="content"]').length);
            document.querySelectorAll('[id*="content"]').forEach(el => console.log('🔍 DEBUG: Found element:', el.id));
            
            if (url && targetContentId) {
                const targetElement = document.querySelector(targetContentId);
                console.log('🔍 DEBUG: targetElement found=', !!targetElement, 'loaded=', targetElement?.dataset?.loaded);
                console.log('🔍 DEBUG: targetElement details:', targetElement?.id, targetElement?.className);
                
                if (targetElement && !targetElement.dataset.loaded) {
                    console.log('🔍 DEBUG: Loading content into', targetContentId, 'from URL:', url);
                    loadContentIntoElement(url, targetElement, subTabId);
                    targetElement.dataset.loaded = 'true';
                } else if (targetElement && targetElement.dataset.loaded) {
                    console.log('🔍 DEBUG: Content already loaded for', subTabId);
                } else {
                    console.error('🔍 ERROR: Target element not found for', targetContentId);
                    console.error('🔍 ERROR: Available elements in DOM:');
                    console.error('🔍 ERROR: All divs with id:', Array.from(document.querySelectorAll('div[id]')).map(el => el.id));
                }
            } else {
                console.error('🔍 ERROR: Missing URL or targetContentId for', subTabId);
            }
        }
        
        // Version corrigée de loadJuridiqueComptableSubTab avec forçage CSS
        function loadJuridiqueComptableSubTabFixed(subTabId) {
            console.log('🔍 Loading juridique-comptable sub-tab (version corrigée):', subTabId);
            
            let url = '';
            let targetContentId = '';
            
            switch(subTabId) {
                case '#formes-juridiques-content':
                    url = '{{ path("app_admin_formes_juridiques") }}';
                    targetContentId = '#formes-juridiques-content';
                    break;
                case '#moyens-paiement-content':
                    url = '{{ path("app_admin_modes_paiement") }}';
                    targetContentId = '#moyens-paiement-content';
                    break;
                case '#modes-reglement-content':
                    url = '{{ path("app_admin_modes_reglement") }}';
                    targetContentId = '#modes-reglement-content';
                    break;
                case '#banques-content':
                    url = '{{ path("app_admin_banques") }}';
                    targetContentId = '#banques-content';
                    break;
                case '#taux-tva-content':
                    url = '{{ path("app_admin_taux_tva") }}';
                    targetContentId = '#taux-tva-content';
                    break;
            }
            
            if (url && targetContentId) {
                const targetElement = document.querySelector(targetContentId);
                
                if (targetElement && !targetElement.dataset.loaded) {
                    console.log('🔍 DEBUG: Loading content into', targetContentId, 'from URL:', url);
                    loadContentIntoElementFixed(url, targetElement, subTabId);
                    targetElement.dataset.loaded = 'true';
                } else if (targetElement && targetElement.dataset.loaded) {
                    console.log('🔍 DEBUG: Content already loaded for', subTabId, '- activating display');
                    // Activer l'affichage même si déjà chargé
                    activateSubTabContent(targetElement, subTabId);
                }
            }
        }
        
        // Version corrigée de loadContentIntoElement avec forçage CSS et timeout
        function loadContentIntoElementFixed(url, targetElement, tabId) {
            console.log('🔄 loadContentIntoElementFixed called with:', {url, targetElementId: targetElement.id, tabId});
            console.log('🔄 Starting fetch request to:', url);
            
            // Créer un AbortController pour gérer le timeout
            const controller = new AbortController();
            const timeoutId = setTimeout(() => {
                console.log('⏰ Request timeout after 10 seconds');
                controller.abort();
            }, 10000); // 10 secondes de timeout
            
            fetch(url, {
                    signal: controller.signal,
                    credentials: 'same-origin',
                    headers: {
                        'X-Requested-With': 'XMLHttpRequest'
                    }
                })
                .then(response => {
                    clearTimeout(timeoutId);
                    console.log('✅ Fetch response received:', response.status, response.statusText);
                    console.log('🔄 Response headers:', Object.fromEntries(response.headers.entries()));
                    
                    if (!response.ok) {
                        throw new Error(`HTTP error! status: ${response.status}`);
                    }
                    
                    return response.text();
                })
                .then(html => {
                    console.log('✅ Received HTML length:', html.length, 'characters');
                    console.log('🔄 HTML preview (first 500 chars):', html.substring(0, 500));
                    
                    if (html.length === 0) {
                        throw new Error('Empty response received');
                    }
                    
                    targetElement.innerHTML = html;
                    
                    // CORRECTION: Activer l'affichage avec forçage CSS
                    activateSubTabContent(targetElement, tabId);
                    
                    // Exécuter les scripts dans le contenu chargé
                    const scripts = targetElement.querySelectorAll('script');
                    console.log('📜 Found', scripts.length, 'scripts to execute');
                    scripts.forEach(script => {
                        const newScript = document.createElement('script');
                        if (script.src) {
                            newScript.src = script.src;
                        } else {
                            newScript.textContent = script.textContent;
                        }
                        document.head.appendChild(newScript);
                    });
                    
                    console.log('✅ Content loaded successfully for:', tabId);
                })
                .catch(error => {
                    clearTimeout(timeoutId);
                    console.error('❌ Error loading tab content:', error);
                    console.error('❌ Error details:', {
                        message: error.message,
                        name: error.name,
                        url: url,
                        tabId: tabId
                    });
                    
                    let errorMessage = 'Erreur lors du chargement du contenu';
                    if (error.name === 'AbortError') {
                        errorMessage = 'Timeout: Le contenu met trop de temps à charger';
                    } else if (error.message.includes('HTTP error')) {
                        errorMessage = `Erreur serveur: ${error.message}`;
                    }
                    
                    targetElement.innerHTML = `<div class="alert alert-danger"><i class="fas fa-exclamation-triangle me-2"></i>${errorMessage}</div>`;
                    
                    // Activer l'affichage même en cas d'erreur
                    activateSubTabContent(targetElement, tabId);
                });
        }
        
        // Fonction pour activer l'affichage d'un sous-onglet avec forçage CSS
        function activateSubTabContent(targetElement, tabId) {
            console.log('🔍 DEBUG: Activating sub-tab content for:', tabId, 'element:', targetElement?.id);
            
            // Déterminer le conteneur parent des sous-onglets
            let parentContainer = null;
            if (tabId.includes('juridique') || tabId.includes('formes-') || tabId.includes('moyens-') || tabId.includes('modes-') || tabId.includes('banques-') || tabId.includes('taux-')) {
                parentContainer = '#juridique-comptable';
            } else if (tabId.includes('societes-') || tabId.includes('users-') || tabId.includes('groupes-') || tabId.includes('themes-') || tabId.includes('templates-')) {
                parentContainer = '#gestion-societes';
            }
            
            if (parentContainer) {
                // Désactiver tous les autres contenus de sous-onglets du même parent
                document.querySelectorAll(`${parentContainer} .tab-content .tab-pane`).forEach(pane => {
                    pane.classList.remove('show', 'active');
                    pane.style.display = 'none';
                    pane.style.visibility = 'hidden';
                    pane.style.opacity = '0';
                });
            }
            
            // Activer le contenu ciblé avec forçage CSS
            if (targetElement) {
                targetElement.classList.add('show', 'active');
                targetElement.style.display = 'block';
                targetElement.style.visibility = 'visible';
                targetElement.style.opacity = '1';
                console.log('🔍 DEBUG: Sub-tab content activated with forced CSS:', tabId);
            } else {
                console.error('🔍 ERROR: targetElement is null for tabId:', tabId);
            }
        }
        
        // Fonction pour charger les sous-onglets Gestion Sociétés avec CSS forcing
        function loadGestionSocietesSubTabFixed(subTabId) {
            console.log('🔍 Loading gestion-societes sub-tab with CSS forcing:', subTabId);
            
            // Désactiver tous les autres sous-onglets
            document.querySelectorAll('#gestion-societes .tab-content .tab-pane').forEach(pane => {
                pane.classList.remove('show', 'active');
                pane.style.display = 'none';
            });
            
            // Activer l'onglet de navigation
            document.querySelectorAll('#societes-sub-tabs .nav-link').forEach(link => {
                link.classList.remove('active');
            });
            
            const navLink = document.querySelector(`#societes-sub-tabs .nav-link[href="${subTabId}"]`);
            if (navLink) {
                navLink.classList.add('active');
            }
            
            let url = '';
            let targetContentId = '';
            
            switch(subTabId) {
                case '#societes-content':
                    url = '{{ path("app_admin_societes") }}';
                    targetContentId = '#societes-content';
                    break;
                case '#users-content':
                    url = '{{ path("app_admin_users") }}';
                    targetContentId = '#users-content';
                    break;
                case '#groupes-users-content':
                    url = '{{ path("app_admin_groupes_utilisateurs") }}';
                    targetContentId = '#groupes-users-content';
                    break;
                case '#themes-couleurs-content':
                    targetContentId = '#themes-couleurs-content';
                    console.log('🎨 Initializing themes-couleurs-content tab');
                    // Le contenu est déjà présent dans le HTML, initialiser les fonctionnalités
                    const themesElement = document.querySelector(targetContentId);
                    console.log('🎨 Themes element found:', !!themesElement, 'already loaded:', themesElement?.dataset.loaded);
                    if (themesElement && !themesElement.dataset.loaded) {
                        console.log('🎨 Calling initEnvironmentTab');
                        initEnvironmentTab();
                        themesElement.dataset.loaded = 'true';
                    }
                    break;
                case '#templates-documents-content':
                    targetContentId = '#templates-documents-content';
                    console.log('📄 Initializing templates-documents-content tab');
                    // Le contenu est déjà présent dans le HTML, initialiser les fonctionnalités templates
                    const templatesElement = document.querySelector(targetContentId);
                    console.log('📄 Templates element found:', !!templatesElement, 'already loaded:', templatesElement?.dataset.loaded);
                    if (templatesElement && !templatesElement.dataset.loaded) {
                        console.log('📄 Calling initTemplatesTab');
                        initTemplatesTab();
                        templatesElement.dataset.loaded = 'true';
                    }
                    break;
            }
            
            // Activer l'élément cible avec CSS forcing
            const targetElement = document.querySelector(targetContentId);
            if (targetElement) {
                if (url) {
                    // Toujours essayer de charger le contenu (on peut supprimer le flag dataset.loaded pour des tests)
                    console.log('🔍 DEBUG: Loading content into', targetContentId, 'from URL:', url);
                    console.log('🔍 DEBUG: Element loaded flag:', targetElement.dataset.loaded);
                    loadContentIntoElementFixed(url, targetElement, subTabId);
                    targetElement.dataset.loaded = 'true';
                } else {
                    console.log('🔍 DEBUG: No URL provided, activating display for', subTabId);
                    // Activer l'affichage pour les onglets sans URL (contenu statique)
                    activateSubTabContent(targetElement, subTabId);
                }
            } else {
                console.error('❌ ERROR: Target element not found for:', targetContentId);
            }
        }
        
        // Fonction pour initialiser les sous-onglets Société avec logique Fixed
        function setupSocietesSubTabsFixed() {
            console.log('🔧 setupSocietesSubTabsFixed: Starting setup');
            
            // Configurer les event listeners pour les sous-onglets
            const gestionSocietesTabs = document.querySelectorAll('#societes-sub-tabs .nav-link');
            console.log('🔧 Found', gestionSocietesTabs.length, 'sub-tabs to configure');
            
            gestionSocietesTabs.forEach(tab => {
                tab.addEventListener('click', function(e) {
                    e.preventDefault();
                    const targetSubTab = e.target.getAttribute('href');
                    console.log('🔧 Sub-tab clicked:', targetSubTab);
                    loadGestionSocietesSubTabFixed(targetSubTab);
                });
            });
            
            // Charger le premier sous-onglet par défaut (sociétés)
            console.log('🔧 Loading default sub-tab: #societes-content');
            loadGestionSocietesSubTabFixed('#societes-content');
        }
        
        // Fonction utilitaire pour charger le contenu dans un élément
        function loadContentIntoElement(url, targetElement, tabId) {
            console.log('🔄 loadContentIntoElement called with:', {url, targetElementId: targetElement.id, tabId});
            
            fetch(url, {
                    credentials: 'same-origin',
                    headers: {
                        'X-Requested-With': 'XMLHttpRequest'
                    }
                })
                .then(response => {
                    console.log('🔄 Fetch response status:', response.status, response.statusText);
                    return response.text();
                })
                .then(html => {
                    console.log('🔄 Received HTML length:', html.length, 'characters');
                    console.log('🔄 HTML preview:', html.substring(0, 200) + '...');
                    targetElement.innerHTML = html;
                    
                    // Exécuter les scripts dans le contenu chargé
                    const scripts = targetElement.querySelectorAll('script');
                    scripts.forEach(script => {
                        const newScript = document.createElement('script');
                        if (script.src) {
                            newScript.src = script.src;
                        } else {
                            newScript.textContent = script.textContent;
                        }
                        document.head.appendChild(newScript);
                    });
                    
                    // Initialiser les fonctions JavaScript spécifiques
                    setTimeout(() => {
                        let functionName = '';
                        let initFunction = null;
                        
                        // Map des sous-onglets vers leurs fonctions d'initialisation
                        switch(tabId) {
                            case '#formes-juridiques-content':
                                functionName = 'initFormesJuridiques';
                                initFunction = window.initFormesJuridiques;
                                break;
                            case '#moyens-paiement-content':
                                functionName = 'initModesPaiement';
                                initFunction = window.initModesPaiement;
                                break;
                            case '#modes-reglement-content':
                                functionName = 'initModesReglement';
                                initFunction = window.initModesReglement;
                                break;
                            case '#banques-content':
                                functionName = 'initBanques';
                                initFunction = window.initBanques;
                                break;
                            case '#taux-tva-content':
                                functionName = 'initTauxTva';
                                initFunction = window.initTauxTva;
                                break;
                            case '#users-content':
                                functionName = 'initUsers';
                                initFunction = window.initUsers;
                                break;
                            case '#societes-content':
                                functionName = 'initSocietes';
                                initFunction = window.initSocietes;
                                break;
                            case '#unites-content':
                                functionName = 'initUnites';
                                initFunction = window.initUnites;
                                break;
                        }
                        
                        if (initFunction && typeof initFunction === 'function') {
                            console.log('🚀 Executing init function:', functionName);
                            try {
                                initFunction();
                                console.log('✅ Init function executed successfully:', functionName);
                            } catch (error) {
                                console.error('❌ Error executing init function:', functionName, error);
                            }
                        } else {
                            console.log('⚠️ Init function not found:', functionName);
                        }
                    }, 100);
                })
                .catch(error => {
                    console.error('❌ Error loading tab content:', error);
                    targetElement.innerHTML = '<div class="alert alert-danger"><i class="fas fa-exclamation-triangle me-2"></i>Erreur lors du chargement du contenu</div>';
                });
        }
        
        // Les fonctions d'initialisation sont définies dans chaque template AJAX
        // et seront disponibles après le chargement du contenu
        
        // Variables globales pour l'environnement
        let currentEnvironmentData = null;
        
        // Initialisation de l'onglet Environnement
        function initEnvironmentTab() {
            console.log('🎨 Initializing Environment Tab');
            
            // Vérifier que nous sommes dans le bon contexte
            const themesTab = document.getElementById('themes-couleurs-content');
            console.log('🎨 Themes tab element found:', !!themesTab);
            console.log('🎨 Themes tab classes:', themesTab?.className);
            
            // S'assurer qu'on ne charge pas par erreur dans le mauvais onglet
            const templatesManagement = document.getElementById('templates-documents-container');
            if (templatesManagement) {
                console.warn('🎨 WARNING: templates-documents-container div found during themes init! This could cause content leakage.');
                
                // Vérifier si on est bien dans l'onglet themes
                const currentTab = document.querySelector('#themes-couleurs-content');
                if (!currentTab || !currentTab.classList.contains('active')) {
                    console.error('🎨 ERROR: Not in themes tab but templates container found!');
                }
            }
            
            loadEnvironmentData();
            setupEnvironmentEventListeners();
        }

        // Initialisation de l'onglet Templates
        function initTemplatesTab() {
            console.log('📄 Initializing Templates Tab');
            
            // Debug: Vérifier que nous ciblons le bon conteneur
            const container = document.getElementById('templates-documents-container');
            console.log('📄 Templates container found:', !!container);
            console.log('📄 Container parent tab:', container?.closest('.tab-pane')?.id);
            
            // S'assurer que le conteneur existe avant de charger les données
            if (container) {
                console.log('📄 Loading templates data...');
                loadTemplatesData();
            } else {
                console.error('📄 Templates container not found!');
            }
        }

        // Charger les données des templates
        async function loadTemplatesData() {
            try {
                console.log('📄 Loading templates data...');
                const container = document.getElementById('templates-documents-container');
                
                // Vérifications de sécurité
                if (!container) {
                    console.error('📄 Templates container not found');
                    return;
                }
                
                const parentTab = container.closest('.tab-pane');
                if (!parentTab || parentTab.id !== 'templates-documents-content') {
                    console.error('📄 Container not in correct tab, expected templates-documents-content, found:', parentTab?.id);
                    return;
                }
                
                console.log('📄 All checks passed, loading data into container');
                
                // Sauvegarde l'état actuel en cas de problème
                const previousContent = container.innerHTML;
                console.log('📄 Previous container content length:', previousContent.length);
                
                if (container) {
                    container.innerHTML = `
                        <div class="alert alert-info">
                            <i class="fas fa-info-circle me-2"></i>
                            <strong>Templates de documents</strong><br>
                            Gestion des modèles de documents (devis, factures, etc.) - Fonctionnalité à venir
                        </div>
                        <div class="row">
                            <div class="col-md-6">
                                <div class="card">
                                    <div class="card-header">
                                        <h6><i class="fas fa-file-invoice me-1"></i> Templates Commerciaux</h6>
                                    </div>
                                    <div class="card-body">
                                        <ul class="list-group list-group-flush">
                                            <li class="list-group-item d-flex justify-content-between">
                                                <span>Template Devis</span>
                                                <span class="badge bg-success">Actif</span>
                                            </li>
                                            <li class="list-group-item d-flex justify-content-between">
                                                <span>Template Facture</span>
                                                <span class="badge bg-warning">À développer</span>
                                            </li>
                                            <li class="list-group-item d-flex justify-content-between">
                                                <span>Template Bon de livraison</span>
                                                <span class="badge bg-warning">À développer</span>
                                            </li>
                                        </ul>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="card">
                                    <div class="card-header">
                                        <h6><i class="fas fa-envelope me-1"></i> Templates Email</h6>
                                    </div>
                                    <div class="card-body">
                                        <ul class="list-group list-group-flush">
                                            <li class="list-group-item d-flex justify-content-between">
                                                <span>Email Devis</span>
                                                <span class="badge bg-success">Actif</span>
                                            </li>
                                            <li class="list-group-item d-flex justify-content-between">
                                                <span>Email Facture</span>
                                                <span class="badge bg-warning">À développer</span>
                                            </li>
                                            <li class="list-group-item d-flex justify-content-between">
                                                <span>Email Relance</span>
                                                <span class="badge bg-warning">À développer</span>
                                            </li>
                                        </ul>
                                    </div>
                                </div>
                            </div>
                        </div>
                    `;
                }
            } catch (error) {
                console.error('❌ Error loading templates:', error);
                const container = document.getElementById('templates-documents-container');
                if (container) {
                    container.innerHTML = '<div class="alert alert-danger">Erreur lors du chargement des templates</div>';
                }
            }
        }
        
        // Charger les données d'environnement
        async function loadEnvironmentData() {
            try {
                const response = await fetch('/admin/environment');
                if (!response.ok) throw new Error('Erreur lors du chargement');
                
                currentEnvironmentData = await response.json();
                console.log('🎨 Environment data loaded:', currentEnvironmentData);
                
                updateEnvironmentForm();
                updateInheritanceInfo();
                updatePreview();
                
            } catch (error) {
                console.error('❌ Error loading environment data:', error);
                showNotification('error', 'Erreur lors du chargement des paramètres environnement');
            }
        }
        
        // Mettre à jour le formulaire avec les données
        function updateEnvironmentForm() {
            if (!currentEnvironmentData) return;
            
            const { theme } = currentEnvironmentData;
            
            // Mettre à jour les couleurs
            document.getElementById('primary-color').value = theme.colors.primary;
            document.getElementById('secondary-color').value = theme.colors.secondary;
            document.getElementById('tertiary-color').value = theme.colors.tertiary;
            
            // Mettre à jour le thème sélectionné
            document.getElementById('theme-select').value = theme.name;
            
            // Mettre à jour le logo
            updateLogoDisplay(theme.logo);
        }
        
        // Mettre à jour l'affichage du logo
        function updateLogoDisplay(logoUrl) {
            const logoCurrentDiv = document.getElementById('logo-current');
            const logoPlaceholder = document.getElementById('logo-placeholder');
            const logoImage = document.getElementById('logo-image');
            
            if (logoUrl) {
                logoImage.src = logoUrl;
                logoCurrentDiv.style.display = 'block';
                logoPlaceholder.style.display = 'none';
            } else {
                logoCurrentDiv.style.display = 'none';
                logoPlaceholder.style.display = 'block';
            }
        }
        
        // Mettre à jour les informations d'héritage
        function updateInheritanceInfo() {
            if (!currentEnvironmentData) return;
            
            const { societe, inheritance_info } = currentEnvironmentData;
            let html = '';
            
            if (societe.is_mere) {
                html = '<small class="text-success"><i class="fas fa-crown"></i> Société mère - Configuration principale</small>';
            } else {
                html = `<small class="text-info"><i class="fas fa-link"></i> Hérite de: ${societe.parent_name}</small><br>`;
                
                // Afficher l'état d'héritage des couleurs
                const colorStatus = inheritance_info.has_local_colors;
                html += '<div class="mt-2">';
                html += `<span class="badge bg-${colorStatus.primary ? 'success' : 'secondary'} me-1">Primaire</span>`;
                html += `<span class="badge bg-${colorStatus.secondary ? 'success' : 'secondary'} me-1">Secondaire</span>`;
                html += `<span class="badge bg-${colorStatus.tertiary ? 'success' : 'secondary'}">Tertiaire</span>`;
                html += '</div>';
                
                html += `<div class="mt-1"><small>${inheritance_info.has_local_logo ? '✅' : '⬆️'} Logo</small></div>`;
            }
            
            document.getElementById('inheritance-info').innerHTML = html;
        }
        
        // Mettre à jour la prévisualisation
        function updatePreview() {
            if (!currentEnvironmentData) return;
            
            const { theme } = currentEnvironmentData;
            const root = document.documentElement;
            
            // Mettre à jour les variables CSS pour la prévisualisation
            root.style.setProperty('--bs-primary', theme.colors.primary);
            root.style.setProperty('--bs-secondary', theme.colors.secondary);
            root.style.setProperty('--bs-success', theme.colors.tertiary);
        }
        
        // Configuration des événements
        function setupEnvironmentEventListeners() {
            // Formulaire couleurs
            document.getElementById('colors-form').addEventListener('submit', handleColorsSubmit);
            
            // Sélecteur de thème
            document.getElementById('theme-select').addEventListener('change', handleThemeChange);
            
            // Bouton reset
            document.getElementById('reset-colors').addEventListener('click', handleResetColors);
            
            // Changement de couleurs en temps réel
            ['primary-color', 'secondary-color', 'tertiary-color'].forEach(id => {
                document.getElementById(id).addEventListener('input', updatePreview);
            });
            
            // Upload logo
            document.getElementById('logo-upload').addEventListener('change', handleLogoFileSelected);
            document.getElementById('upload-logo').addEventListener('click', handleLogoUpload);
            document.getElementById('delete-logo').addEventListener('click', handleLogoDelete);
            
            // Gestion des onglets Pills pour l'environnement
            document.querySelectorAll('a[data-bs-toggle="pill"]').forEach(tab => {
                tab.addEventListener('shown.bs.tab', function (event) {
                    const target = event.target.getAttribute('href');
                    if (target === '#templates-content') {
                        loadTemplatesManagement();
                    }
                });
            });
        }
        
        // Gestion de la soumission des couleurs
        async function handleColorsSubmit(e) {
            e.preventDefault();
            
            const formData = new FormData(e.target);
            const colors = {
                primary: formData.get('primary'),
                secondary: formData.get('secondary'),
                tertiary: formData.get('tertiary')
            };
            
            try {
                const response = await fetch('/admin/environment/colors', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify(colors)
                });
                
                if (!response.ok) throw new Error('Erreur de sauvegarde');
                
                showNotification('success', 'Couleurs enregistrées avec succès');
                loadEnvironmentData(); // Recharger les données
                
            } catch (error) {
                console.error('❌ Error saving colors:', error);
                showNotification('error', 'Erreur lors de la sauvegarde des couleurs');
            }
        }
        
        // Gestion du changement de thème
        async function handleThemeChange(e) {
            const themeName = e.target.value;
            
            // Appliquer les couleurs du thème
            const themeColors = {
                'default': { primary: '#dc3545', secondary: '#6c757d', tertiary: '#28a745' },
                'blue': { primary: '#007bff', secondary: '#28a745', tertiary: '#17a2b8' },
                'green': { primary: '#28a745', secondary: '#17a2b8', tertiary: '#20c997' },
                'yellow': { primary: '#ffc107', secondary: '#fd7e14', tertiary: '#e0a800' }
            };
            
            const colors = themeColors[themeName];
            if (colors) {
                document.getElementById('primary-color').value = colors.primary;
                document.getElementById('secondary-color').value = colors.secondary;
                document.getElementById('tertiary-color').value = colors.tertiary;
                updatePreview();
            }
            
            // Sauvegarder le thème
            try {
                const response = await fetch('/admin/environment/theme', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ theme: themeName })
                });
                
                if (!response.ok) throw new Error('Erreur de sauvegarde');
                showNotification('success', 'Thème appliqué avec succès');
                
            } catch (error) {
                console.error('❌ Error saving theme:', error);
                showNotification('error', 'Erreur lors de la sauvegarde du thème');
            }
        }
        
        // Réinitialiser les couleurs
        function handleResetColors() {
            if (!confirm('Réinitialiser aux couleurs par défaut ?')) return;
            
            document.getElementById('primary-color').value = '#dc3545';
            document.getElementById('secondary-color').value = '#6c757d';
            document.getElementById('tertiary-color').value = '#28a745';
            document.getElementById('theme-select').value = 'default';
            updatePreview();
        }
        
        // Sélection fichier logo
        function handleLogoFileSelected(e) {
            const file = e.target.files[0];
            const uploadBtn = document.getElementById('upload-logo');
            
            if (file) {
                // Validation basique
                if (file.size > 2 * 1024 * 1024) {
                    alert('Le fichier est trop volumineux (max 2MB)');
                    e.target.value = '';
                    uploadBtn.disabled = true;
                    return;
                }
                
                if (!file.type.startsWith('image/')) {
                    alert('Veuillez sélectionner un fichier image');
                    e.target.value = '';
                    uploadBtn.disabled = true;
                    return;
                }
                
                uploadBtn.disabled = false;
            } else {
                uploadBtn.disabled = true;
            }
        }
        
        // Upload logo
        async function handleLogoUpload() {
            const fileInput = document.getElementById('logo-upload');
            const file = fileInput.files[0];
            
            if (!file) return;
            
            const formData = new FormData();
            formData.append('logo', file);
            
            try {
                const response = await fetch('/admin/environment/logo', {
                    method: 'POST',
                    body: formData
                });
                
                if (!response.ok) throw new Error('Erreur upload');
                
                const result = await response.json();
                showNotification('success', result.message);
                updateLogoDisplay(result.logo_url);
                fileInput.value = '';
                document.getElementById('upload-logo').disabled = true;
                
            } catch (error) {
                console.error('❌ Error uploading logo:', error);
                showNotification('error', 'Erreur lors du téléchargement du logo');
            }
        }
        
        // Supprimer logo
        async function handleLogoDelete() {
            if (!confirm('Supprimer le logo ?')) return;
            
            try {
                const response = await fetch('/admin/environment/logo', {
                    method: 'DELETE'
                });
                
                if (!response.ok) throw new Error('Erreur suppression');
                
                const result = await response.json();
                showNotification('success', result.message);
                updateLogoDisplay(null);
                
            } catch (error) {
                console.error('❌ Error deleting logo:', error);
                showNotification('error', 'Erreur lors de la suppression du logo');
            }
        }
        
        // Gestion des templates
        async function loadTemplatesManagement() {
            const container = document.getElementById('templates-documents-container');
            if (!container || container.dataset.loaded === 'true') return;
            
            try {
                container.innerHTML = '<div class="text-center p-4"><div class="spinner-border text-primary" role="status"><span class="visually-hidden">Chargement...</span></div><p class="text-muted mt-2">Chargement de la gestion des templates...</p></div>';
                
                const response = await fetch('/admin/templates');
                if (!response.ok) throw new Error('Erreur lors du chargement');
                
                const html = await response.text();
                container.innerHTML = html;
                container.dataset.loaded = 'true';
                
                console.log('📄 Templates management loaded successfully');
            } catch (error) {
                console.error('❌ Error loading templates management:', error);
                container.innerHTML = '<div class="alert alert-danger"><i class="fas fa-exclamation-triangle me-2"></i>Erreur lors du chargement de la gestion des templates</div>';
            }
        }
        
        // Fonction utilitaire pour afficher les notifications
        function showNotification(type, message) {
            // Créer une notification toast simple
            const alertClass = type === 'success' ? 'alert-success' : 'alert-danger';
            const icon = type === 'success' ? 'fa-check-circle' : 'fa-exclamation-triangle';
            
            const notification = document.createElement('div');
            notification.className = `alert ${alertClass} alert-dismissible fade show position-fixed`;
            notification.style.cssText = 'top: 20px; right: 20px; z-index: 9999; min-width: 300px;';
            notification.innerHTML = `
                <i class="fas ${icon} me-2"></i>${message}
                <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
            `;
            
            document.body.appendChild(notification);
            
            // Auto-suppression après 5 secondes
            setTimeout(() => {
                if (notification.parentNode) {
                    notification.remove();
                }
            }, 5000);
        }
        
    });
    </script>
{% endblock %}