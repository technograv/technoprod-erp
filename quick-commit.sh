#!/bin/bash

# üöÄ SCRIPT DE COMMIT RAPIDE POUR TECHNOPROD
# Usage: ./quick-commit.sh "Message du commit"

set -e

# Couleurs
GREEN='\033[0;32m'
BLUE='\033[0;34m'
YELLOW='\033[1;33m'
NC='\033[0m'

print_step() {
    echo -e "${BLUE}üîß $1${NC}"
}

print_success() {
    echo -e "${GREEN}‚úÖ $1${NC}"
}

print_warning() {
    echo -e "${YELLOW}‚ö†Ô∏è  $1${NC}"
}

# Message de commit
if [ -z "$1" ]; then
    echo "Usage: $0 \"Message du commit\""
    echo "Exemple: $0 \"Ajout nouvelle fonctionnalit√© de facturation\""
    exit 1
fi

COMMIT_MESSAGE="$1"

print_step "D√©ploiement rapide en cours..."

# V√©rifier les modifications
print_step "V√©rification des fichiers modifi√©s..."
git status --porcelain

# Ajout des fichiers
print_step "Ajout des fichiers..."
git add .

# V√©rification des diff√©rences
print_step "Affichage des modifications..."
git diff --cached --stat

# Demande de confirmation
echo ""
read -p "Confirmer le commit avec ce message: '$COMMIT_MESSAGE' ? (y/N): " -n 1 -r
echo
if [[ ! $REPLY =~ ^[Yy]$ ]]; then
    print_warning "Commit annul√©"
    exit 1
fi

# Commit
print_step "Cr√©ation du commit..."
FULL_MESSAGE="$COMMIT_MESSAGE

ü§ñ Generated with Claude Code
Co-Authored-By: Claude <noreply@anthropic.com>"

git commit -m "$FULL_MESSAGE"

# Push
print_step "Push vers GitHub..."
git push

print_success "D√©ploiement termin√© avec succ√®s!"
print_success "Vos modifications sont maintenant sur GitHub"